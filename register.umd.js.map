{"version":3,"file":"register.umd.js","sources":["src/getDomPath.js","src/utils.js","src/Hints.js","src/register.js"],"sourcesContent":["function getDomPath(el) {\n  var stack = []\n  while (el.parentNode) {\n    let sibCount = 0\n    let sibIndex = 0\n    for (var i = 0; i < el.parentNode.childNodes.length; i++) {\n      var sib = el.parentNode.childNodes[i]\n      if (sib.nodeName === el.nodeName) {\n        if (sib === el) {\n          sibIndex = sibCount\n        }\n        sibCount++\n      }\n    }\n    if (el.hasAttribute('id') && el.id !== '') {\n      stack.unshift(el.nodeName.toLowerCase() + '#' + el.id)\n    } else if (el.classList.toString() !== '' && el.tagName !== 'BODY') {\n      stack.unshift(el.nodeName.toLowerCase() + '.' + el.classList.toString())\n    } else if (sibCount > 1) {\n      stack.unshift(el.nodeName.toLowerCase() + ':eq(' + sibIndex + ')')\n    } else {\n      stack.unshift(el.nodeName.toLowerCase())\n    }\n    el = el.parentNode\n  }\n  const toFilter = ['html', 'body', 'div#root']\n  return stack.filter((el) => !toFilter.includes(el)).join(' > ')\n}\n\nexport default getDomPath\n","import getDomPath from './getDomPath'\nimport { createScheduler } from 'lrt'\n\nconst getElements = (container, tag) =>\n  Array.from(container.querySelectorAll(tag))\n\nconst getStylesheetRules = (sheets, k) => {\n  let rules = []\n  try {\n    rules = sheets[k].rules || sheets[k].cssRules\n  } catch (e) {\n    //\n  }\n  return rules\n}\n\nconst getNodeName = (el) =>\n  el.nodeName === 'A'\n    ? 'a'\n    : el.nodeName === 'BUTTON'\n    ? 'button'\n    : `${el.nodeName.toLowerCase()}[role=\"button\"]`\n\nconst attachLabels = (inputs, container) =>\n  inputs.map((input) => {\n    let labelText = ''\n    if (input.labels && input.labels[0]) {\n      labelText = input.labels[0].innerText\n    } else if (input.parentElement.nodeName === 'LABEL') {\n      labelText = input.parentElement.innerText\n    } else if (input.id) {\n      const label = container.querySelector(`label[for=\"${input.id}\"]`)\n      if (label) labelText = label.innerText\n    }\n    return {\n      labelText,\n      path: getDomPath(input),\n      type: input.type,\n    }\n  })\n\nconst textInputs = {\n  text: true,\n  search: true,\n  tel: true,\n  url: true,\n  email: true,\n  number: true,\n  password: true,\n}\n\nconst getAutocompleteWarnings = (container) => {\n  const inputs = getElements(container, 'input')\n  const warnings = inputs.filter((input) => {\n    const currentType = input.getAttribute('type')\n    const autocomplete = input.getAttribute('autocomplete')\n    return textInputs[currentType] && !autocomplete\n  })\n  return attachLabels(warnings, container)\n}\n\nconst getInputTypeNumberWarnings = (container) => {\n  const inputs = getElements(container, 'input[type=\"number\"]')\n  return attachLabels(inputs)\n}\n\nconst getInputTypeWarnings = (container) => {\n  const inputs = getElements(container, 'input[type=\"text\"]')\n    .concat(getElements(container, 'input:not([type])'))\n    .filter((input) => !input.getAttribute('inputmode'))\n  return attachLabels(inputs, container)\n}\n\nexport const getInstantWarnings = (container) => ({\n  autocomplete: getAutocompleteWarnings(container),\n  inputType: getInputTypeWarnings(container),\n  inputTypeNumber: getInputTypeNumberWarnings(container),\n})\n\n// SCHEDULED ANALYSES\n// We schedule these so the UI does not lock up while they're running\n\nconst isInside = (dangerZone, bounding) =>\n  bounding.top <= dangerZone.bottom &&\n  bounding.bottom >= dangerZone.top &&\n  bounding.left <= dangerZone.right &&\n  bounding.right >= dangerZone.left\n\nconst toPresent = ({ el, bounding: { width, height }, close }) => ({\n  type:\n    el.nodeName === 'A'\n      ? 'a'\n      : el.nodeName === 'BUTTON'\n      ? 'button'\n      : `${el.nodeName.toLowerCase()}[role=\"button\"]`,\n  path: getDomPath(el),\n  text: el.innerText,\n  html: el.innerHTML,\n  width: Math.floor(width),\n  height: Math.floor(height),\n  close,\n})\n\nexport const MIN_SIZE = 32\nexport const RECOMMENDED_DISTANCE = 8\n//const RECOMMENDED_SIZE = 48\n\nconst checkMinSize = ({ height, width }) =>\n  height < MIN_SIZE || width < MIN_SIZE\n\nfunction* getTouchTargetSizeWarning(container) {\n  const elements = getElements(container, 'button')\n    .concat(getElements(container, '[role=\"button\"]'))\n    .concat(getElements(container, 'a'))\n\n  const suspectElements = Array.from(new Set(elements))\n\n  const len = elements.length\n  const underMinSize = []\n  const tooClose = []\n\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    const bounding = el.getBoundingClientRect()\n\n    const dangerZone = {\n      top: bounding.top - RECOMMENDED_DISTANCE,\n      left: bounding.left - RECOMMENDED_DISTANCE,\n      right: bounding.right + RECOMMENDED_DISTANCE,\n      bottom: bounding.bottom + RECOMMENDED_DISTANCE,\n    }\n\n    const close = suspectElements.filter(\n      (susEl) =>\n        susEl !== el && isInside(dangerZone, susEl.getBoundingClientRect())\n    )\n\n    const isUnderMinSize = checkMinSize(bounding)\n    if (isUnderMinSize || close.length > 0) {\n      const present = toPresent({ el, bounding, close })\n      if (isUnderMinSize) {\n        underMinSize.push(present)\n      }\n      if (close.length > 0) {\n        tooClose.push(present)\n      }\n    }\n    yield i\n  }\n\n  return { tooClose, underMinSize }\n}\n\nfunction* getTapHighlightWarnings(container) {\n  const buttons = getElements(container, 'button').concat(\n    getElements(container, '[role=\"button\"]')\n  )\n  const links = getElements(container, 'a')\n  const elements = buttons.concat(links)\n  const len = elements.length\n\n  const result = []\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    if (\n      getComputedStyle(el)['-webkit-tap-highlight-color'] === 'rgba(0, 0, 0, 0)'\n    ) {\n      result.push({\n        type: getNodeName(el),\n        text: el.innerText,\n        html: el.innerHTML,\n        path: getDomPath(el),\n      })\n    }\n    yield i\n  }\n\n  return result\n}\n\nconst MAX_WIDTH = 600\n\nfunction* getSrcsetWarnings(container) {\n  const images = getElements(container, 'img')\n  const len = images.length\n\n  const result = []\n\n  for (let i = 0; i < len; i++) {\n    const img = images[i]\n    const srcSet = img.getAttribute('srcset')\n    const src = img.getAttribute('src')\n    if (!srcSet && src) {\n      const isSVG = Boolean(src.match(/svg$/))\n      if (!isSVG) {\n        const isLarge =\n          parseInt(getComputedStyle(img).width, 10) > MAX_WIDTH ||\n          img.naturalWidth > MAX_WIDTH\n        if (isLarge) {\n          result.push({\n            src: img.src,\n            path: getDomPath(img),\n            alt: img.alt,\n          })\n        }\n      }\n    }\n    yield i\n  }\n\n  return result\n}\n\nfunction* getBackgroundImageWarnings(container) {\n  const backgroundImageRegex = /url\\(\".*?(.png|.jpg|.jpeg)\"\\)/\n  const elsWithBackgroundImage = getElements(container, '#root *').filter(\n    (el) => {\n      const style = getComputedStyle(el)\n      return (\n        style['background-image'] &&\n        backgroundImageRegex.test(style['background-image']) &&\n        // HACK\n        // ideally, we would make a new image element and check its \"naturalWidth\"\n        // to get a better idea of the size of the background image, this is a hack\n        el.clientWidth > 200\n      )\n    }\n  )\n\n  if (!elsWithBackgroundImage.length) return []\n\n  const styleDict = new Map()\n\n  Object.keys(container.styleSheets).forEach((k) => {\n    getStylesheetRules(container.styleSheets, k).forEach((rule) => {\n      if (rule) {\n        try {\n          elsWithBackgroundImage.forEach((el) => {\n            if (el.matches(rule.selectorText)) {\n              styleDict.set(el, (styleDict.get(el) || []).concat(rule))\n            }\n          })\n        } catch (e) {\n          // catch errors in safari\n        }\n      }\n    })\n  })\n\n  const responsiveBackgroundImgRegex = /-webkit-min-device-pixel-ratio|min-resolution|image-set/\n\n  const result = []\n  const elements = Array.from(styleDict.entries())\n  const len = elements.length\n\n  for (let i = 0; i < len; i++) {\n    const [el, styles] = elements[i]\n    if (styles) {\n      const requiresResponsiveWarning = styles.some(\n        (style) => !responsiveBackgroundImgRegex.test(style)\n      )\n      if (requiresResponsiveWarning) {\n        const bg = getComputedStyle(el).backgroundImage\n        const src = bg.match(/url\\(\"(.*)\"\\)/)\n          ? bg.match(/url\\(\"(.*)\"\\)/)[1]\n          : undefined\n        result.push({\n          path: getDomPath(el),\n          src,\n        })\n      }\n    }\n    yield i\n  }\n\n  return result\n}\n\nexport const getActiveStyles = function (container, el) {\n  const sheets = container.styleSheets\n  const result = []\n\n  const activeRegex = /:active$/\n\n  Object.keys(sheets).forEach((k) => {\n    getStylesheetRules(sheets, k).forEach((rule) => {\n      if (rule && rule.selectorText && rule.selectorText.match(activeRegex)) {\n        const ruleNoPseudoClass = rule.selectorText.replace(activeRegex, '')\n        try {\n          if (el.matches(ruleNoPseudoClass)) {\n            result.push(rule)\n          }\n        } catch (e) {\n          // safari\n        }\n      }\n    })\n  })\n  return result\n}\n\nfunction* getActiveWarnings(container) {\n  const buttons = getElements(container, 'button').concat(\n    getElements(container, '[role=\"button\"]')\n  )\n  const links = getElements(container, 'a')\n  const elements = buttons.concat(links)\n  const len = elements.length\n  const result = []\n\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    const hasActive = getActiveStyles(container, el)\n    if (hasActive.length) {\n      result.push({\n        type: getNodeName(el),\n        text: el.innerText,\n        html: el.innerHTML,\n        path: getDomPath(el),\n      })\n    }\n    yield i\n  }\n\n  return result\n}\n\nexport const getOriginalStyles = (container, el) => {\n  const sheets = container.styleSheets\n  let result = []\n  Object.keys(sheets).forEach((k) => {\n    const rules = getStylesheetRules(sheets, k)\n    rules.forEach((rule) => {\n      if (rule) {\n        try {\n          if (el.matches(rule.selectorText)) {\n            result.push(rule.cssText)\n          }\n        } catch (e) {\n          // catch errors in safari\n        }\n      }\n    })\n  })\n\n  return result\n}\n\nfunction* get100vhWarnings(container) {\n  const elements = getElements(container, '#root *')\n  const len = elements.length\n  const result = []\n\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    const styles = getOriginalStyles(container, el)\n    const vhWarning = styles.find((style) => /100vh/.test(style))\n    if (vhWarning) {\n      result.push({ el, css: vhWarning, path: getDomPath(el) })\n    }\n    yield i\n  }\n\n  return result\n}\n\n/*function* getTooWideWarnings(container) {\n  const containerWidth = container.body.clientWidth\n  const elements = getElements(container, '#root *')\n  const len = elements.length\n  const result = []\n\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    if (el.clientWidth > containerWidth) {\n      result.push({\n        el,\n        path: getDomPath(el),\n      })\n    }\n    yield i\n  }\n\n  return result\n}*/\n\nconst schedule = (iterator) => {\n  // 100ms is the threshold where users start to notice UI lag\n  // higher values increase lag but do not noticeably improve processing time so 100ms is the sweet spot\n  const scheduler = createScheduler({ chunkBudget: 100 })\n  const task = scheduler.runTask(iterator)\n  return { task, abort: () => scheduler.abortTask(task) }\n}\n\nexport const getScheduledWarnings = (container, setState, setComplete) => {\n  const analyses = {\n    // tooWide: schedule(getTooWideWarnings(container)),\n    tapHighlight: schedule(getTapHighlightWarnings(container)),\n    srcset: schedule(getSrcsetWarnings(container)),\n    backgroundImg: schedule(getBackgroundImageWarnings(container)),\n    touchTarget: schedule(getTouchTargetSizeWarning(container)),\n    active: schedule(getActiveWarnings(container)),\n    height: schedule(get100vhWarnings(container)),\n  }\n  const analysesArray = Object.keys(analyses)\n  let remaining = analysesArray.length\n  analysesArray.forEach((key) => {\n    //const start = performance.now()\n    analyses[key].task.then((result) => {\n      //console.log(key, performance.now() - start)\n      setState((prev) => ({ ...prev, [key]: result }))\n      if (--remaining === 0) {\n        setComplete(true)\n      }\n    })\n  })\n  return () => analysesArray.forEach((key) => analyses[key].abort())\n}\n","import React, { Fragment } from 'react'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { withTheme } from 'emotion-theming'\nimport {\n  getInstantWarnings,\n  getScheduledWarnings,\n  MIN_SIZE,\n  RECOMMENDED_DISTANCE,\n} from './utils'\n\nconst accessibleBlue = '#0965df'\nconst warning = '#bd4700'\n\nconst tagStyles = `\n  padding: .25rem .5rem;\n  font-weight: bold;\n  display:inline-block;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n  svg {\n    margin-right: .25rem;\n    display: inline-block;\n    height: .7rem;\n    line-height: 1;\n    position: relative;\n    top: .03rem;\n    letter-spacing: .01rem;\n  }\n`\n\nconst StyledWarningTag = styled.div`\n  color: ${warning};\n  background-color: hsl(41, 100%, 92%);\n  ${tagStyles}\n`\n\nconst Warning = () => (\n  <StyledWarningTag>\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 576 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"\n      ></path>\n    </svg>\n    warning\n  </StyledWarningTag>\n)\n\nconst StyledInfoTag = styled.div`\n  ${tagStyles}\n  color: ${accessibleBlue};\n  background-color: hsla(214, 92%, 45%, 0.1);\n`\nconst Hint = () => (\n  <StyledInfoTag>\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"magic\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      className=\"svg-inline--fa fa-magic fa-w-16 fa-5x\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M224 96l16-32 32-16-32-16-16-32-16 32-32 16 32 16 16 32zM80 160l26.66-53.33L160 80l-53.34-26.67L80 0 53.34 53.33 0 80l53.34 26.67L80 160zm352 128l-26.66 53.33L352 368l53.34 26.67L432 448l26.66-53.33L512 368l-53.34-26.67L432 288zm70.62-193.77L417.77 9.38C411.53 3.12 403.34 0 395.15 0c-8.19 0-16.38 3.12-22.63 9.38L9.38 372.52c-12.5 12.5-12.5 32.76 0 45.25l84.85 84.85c6.25 6.25 14.44 9.37 22.62 9.37 8.19 0 16.38-3.12 22.63-9.37l363.14-363.15c12.5-12.48 12.5-32.75 0-45.24zM359.45 203.46l-50.91-50.91 86.6-86.6 50.91 50.91-86.6 86.6z\"\n        className=\"\"\n      ></path>\n    </svg>\n    hint\n  </StyledInfoTag>\n)\n\nconst Spacer = styled.div`\n  padding: 1rem;\n`\n\nconst StyledTappableContents = styled.div`\n  display: inline-block;\n  padding-top: 0.25rem;\n  height: 2rem;\n  min-width: 1rem;\n  width: auto;\n  background-color: hsla(0, 0%, 50%, 0.1);\n  border-radius: 3px;\n  li {\n    list-style-type: none;\n  }\n  img,\n  svg {\n    max-height: 2rem !important;\n    min-height: 1rem !important;\n    width: auto !important;\n  }\n`\n\nconst DemoImg = styled.img`\n  height: 4rem;\n  width: auto;\n  max-width: 100%;\n  background-color: hsla(0, 0%, 0%, 0.2);\n`\n\nconst ListEntry = styled.li`\n  margin-bottom: 0.5rem;\n  ${(props) => (props.nostyle ? 'list-style-type: none;' : '')};\n`\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n\n  font-size: ${(props) => props.theme.typography.size.s2}px;\n\n  p {\n    line-height: 1.4;\n  }\n\n  h3 {\n    font-size: ${(props) => props.theme.typography.size.s2}px;\n    font-weight: bold;\n    margin-bottom: 0.5rem;\n    margin-top: 0;\n  }\n\n  code {\n    background: hsla(0, 0%, 50%, 0.1);\n    border-radius: 3px;\n  }\n\n  summary {\n    cursor: pointer;\n    display: block;\n    margin-right: 1rem;\n    padding: 0.2rem 0.3rem;\n    border-radius: 5px;\n    color: ${accessibleBlue};\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 3px ${(props) => props.theme.color.mediumlight};\n    }\n  }\n\n  ul {\n    padding-left: 1.25rem;\n    max-height: 12rem;\n    overflow: auto;\n    padding-bottom: 0.5rem;\n    li {\n      margin-bottom: 0.3rem;\n    }\n  }\n  a {\n    text-decoration: none;\n    color: ${accessibleBlue};\n    &:hover {\n      border-bottom: 1px solid ${accessibleBlue};\n    }\n  }\n  > div {\n    border-bottom: 1px solid ${(props) => props.theme.color.medium};\n    border-right: 1px solid ${(props) => props.theme.color.medium};\n  }\n`\n\nconst StyledBanner = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 0.75rem;\n  grid-column: 1 / -1;\n  height: 2.875rem;\n`\n\nconst StyledRescanButton = styled.button`\n  margin-left: 0.5rem;\n  border-width: 1px;\n  border-radius: 3px;\n  padding: 0.2rem 0.5rem;\n  cursor: pointer;\n  font-family: inherit;\n  color: inherit;\n  border: none;\n  font-size: 100%;\n  background-color: transparent;\n  appearance: none;\n  box-shadow: none;\n  border: 1px solid;\n  &:hover {\n    background-color: hsla(0, 0%, 0%, 0.15);\n  }\n`\n\nconst Spinner = styled.div`\n  cursor: progress;\n  display: inline-block;\n  overflow: hidden;\n  position: relative;\n  margin-right: 0.7rem;\n  height: 1.25rem;\n  width: 1.25rem;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 50%;\n  border-color: rgba(97, 97, 97, 0.29);\n  border-top-color: rgb(100, 100, 100);\n  animation: spinner 0.7s linear infinite;\n  mix-blend-mode: difference;\n\n  @keyframes spinner {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nconst fixText = 'Learn more'\n\nconst ActiveWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n      <h3>\n        <code>:active</code> styles on iOS\n      </h3>\n      <p>\n        <code>:active</code> styles will only appear in iOS{' '}\n        <a\n          href=\"https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          if a touch listener is added to the element or one of its ancestors\n        </a>\n        . Once activated in this manner, <code>:active</code> styles (along with{' '}\n        <code>:hover</code> styles) will be applied immediately in iOS when a\n        user taps, possibly creating a confusing UX. (On Android,{' '}\n        <code>:active</code> styles are applied with a slight delay to allow the\n        user to use gestures like scroll without necessarily activating{' '}\n        <code>:active</code> styles.)\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>{w.type}</code> with content&nbsp;&nbsp;\n            {w.text ? (\n              <b>{w.text}</b>\n            ) : w.html ? (\n              <StyledTappableContents\n                dangerouslySetInnerHTML={{ __html: w.html }}\n              />\n            ) : (\n              '[no text found]'\n            )}\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p style={{ marginTop: '1rem' }}>\n          <a\n            href=\"https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari/33681490#33681490\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Relevant Stack Overflow thread\n          </a>\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst TapWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n      <h3>Tap style removed from tappable element</h3>\n      <p>\n        These elements have an invisible{' '}\n        <code>-webkit-tap-highlight-color</code>. While this might be\n        intentional, please verify that they have appropriate tap indication\n        styles added through other means.\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>{w.type}</code> with content&nbsp;&nbsp;\n            {w.text ? (\n              <b>{w.text}</b>\n            ) : w.html ? (\n              <StyledTappableContents\n                dangerouslySetInnerHTML={{ __html: w.html }}\n              />\n            ) : (\n              '[no text found]'\n            )}\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p>\n          Some stylesheets remove the tap indication highlight shown on iOS and\n          Android browsers by adding the code{' '}\n          <code>-webkit-tap-highlight-color: transparent</code>. In order to\n          maintain a good mobile experience, tap styles should be added via\n          appropriate <code>:active</code> CSS styles (though, note that{' '}\n          <a\n            href=\"https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <code>:active</code> styles work inconsistently in iOS\n          </a>\n          ) , or via JavaScript on the <code>touchstart</code> event.\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst AutocompleteWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Warning />\n      <h3>\n        Input with no <code>autocomplete</code> attribute\n      </h3>\n      <p>\n        Most textual inputs should have an explicit <code>autocomplete</code>{' '}\n        attribute.\n      </p>\n      <p>\n        If you truly want to disable autocomplete, try using a{' '}\n        <a\n          href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          semantically valid but unique value rather than{' '}\n          <code>autocomplete=&quot;off&quot;</code>\n        </a>\n        , which doesn&apos;t work in Chrome.\n      </p>\n      <p>\n        Note: <code>autocomplete</code> is styled as <code>autoComplete</code>{' '}\n        in JSX.\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>input type=&quot;{w.type}&quot;</code> and label{' '}\n            <b>{w.labelText || '[no label found]'}</b>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li>\n            <a\n              href=\"https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Autocomplete documentation by Google\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Autocomplete documentation by Mozilla\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst InputTypeWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n\n      <h3>\n        Plain input type <code>text</code> detected\n      </h3>\n      <p>\n        This will render the default text keyboard on mobile (which could very\n        well be what you want!) If you haven&apos;t already, take a moment to\n        make sure this is correct. You can use{' '}\n        <a\n          href=\"https://better-mobile-inputs.netlify.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          this tool\n        </a>{' '}\n        to explore keyboard options.\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>input type=&quot;{w.type}&quot;</code> and label{' '}\n            <b>{w.labelText || '[no label found]'}</b>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p>\n          <a\n            href=\"https://css-tricks.com/better-form-inputs-for-better-mobile-user-experiences/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Article reviewing the importance of using correct input types on the\n            mobile web from CSS Tricks.\n          </a>\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst InputTypeNumberWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n\n      <h3>\n        Input type <code>number</code> detected\n      </h3>\n      <p>\n        <code>\n          &lt;input type=&quot;text&quot; inputmode=&quot;decimal&quot;/&gt;\n        </code>{' '}\n        could give you improved usability over{' '}\n        <code>&lt;input type=&quot;number&quot; /&gt;</code>.\n      </p>\n      <p>\n        Note: <code>inputmode</code> is styled as <code>inputMode</code> in JSX.{' '}\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>input type=&quot;{w.type}&quot;</code> and label{' '}\n            <b>{w.labelText || '[no label found]'}</b>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p>\n          <a\n            href=\"https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Overview of the issues with{' '}\n            <code>input type=&quot;number&quot;</code> from gov.uk.\n          </a>\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\n// const TooWideWarnings = ({ warnings }) => {\n//   if (!warnings || !warnings.length) return null\n\n//   const title = `Element${\n//     warnings.length > 1 ? 's' : ''\n//   } introducing horizontal overflow`\n\n//   return (\n//     <Spacer>\n//       <Hint />\n//       <h3>{title}</h3>\n//       <p>\n//         The following element{warnings.length > 1 ? 's' : ''} had a width that\n//         exceeded that of the page, possibly introducing a horizontal scroll.\n//         While this may be intentional, please verify that this is not an error.\n//       </p>\n//       <LogToConsole title={title} els={warnings.map((w) => w.el)} />\n//       <div>\n//         {warnings.map(({ path }, i) => (\n//             <ListEntry key={i} style={{ marginBottom: '1rem' }} as=\"div\">\n//               <code>{path}</code>\n//             </ListEntry>\n//           )\n//         )}\n//       </div>\n//     </Spacer>\n//   )\n// }\n\nconst HeightWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n      <h3>\n        Usage of <code>100vh</code> CSS\n      </h3>\n      <p>\n        Viewport units are{' '}\n        <a\n          href=\"https://chanind.github.io/javascript/2019/09/28/avoid-100vh-on-mobile-web.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          tricky on mobile.\n        </a>{' '}\n        On some mobile browers, depending on scroll position, <code>100vh</code>{' '}\n        might take up more than 100% of screen height due to browser chrome like\n        the address bar.\n      </p>\n      <ul>\n        {warnings.map(({ path }, i) => (\n          <ListEntry key={i}>\n            <code>{path}</code>\n          </ListEntry>\n        ))}\n      </ul>\n    </Spacer>\n  )\n}\n\nconst BackgroundImageWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Warning />\n      <h3>Non-dynamic background image</h3>\n      <p>\n        Downloading larger-than-necessary images hurts performance for users on\n        mobile. You can use{' '}\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/image-set\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <code>image-set</code>\n        </a>{' '}\n        to serve an appropriate background image based on the user&apos;s device\n        resolution.\n      </p>\n      <ul>\n        {warnings.map(({ src, alt }, i) => (\n          <ListEntry key={i} nostyle>\n            <div>\n              <DemoImg src={src} alt={alt} />\n            </div>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li>\n            <a\n              href=\"https://css-tricks.com/responsive-images-css/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Article discussing responsive background images in greater detail,\n              including the interaction of <code>image-set</code> with media\n              queries, from CSS Tricks.\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst SrcsetWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Warning />\n      <h3>\n        Large image without <code>srcset</code>\n      </h3>\n      <p>\n        Downloading larger-than-necessary images hurts performance for users on\n        mobile. You can use <code>srcset</code> to customize image sizes for\n        different device resolutions and sizes.\n      </p>\n      <ul>\n        {warnings.map(({ src, alt }, i) => (\n          <ListEntry key={i} nostyle>\n            <div>\n              <DemoImg src={src} alt={alt} />\n            </div>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li>\n            <a\n              href=\"https://cloudfour.com/thinks/responsive-images-the-simple-way\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Summary of the why and how of responsive images\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.responsivebreakpoints.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              A tool to generate responsive images\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst TouchTargetWarnings = ({ warnings }) => {\n  if (!warnings) return null\n  const { underMinSize, tooClose } = warnings\n  if (!underMinSize.length && !tooClose.length) return null\n  return (\n    <Spacer>\n      <Warning />\n\n      {Boolean(underMinSize.length) && (\n        <div>\n          <h3>Small touch target</h3>\n          <p>\n            With heights and/or widths of less than {MIN_SIZE}px, these tappable\n            elements could be difficult for users to press:\n          </p>\n          <ul>\n            {underMinSize.map((w, i) => (\n              <ListEntry key={i}>\n                <code>{w.type}</code> with content&nbsp;&nbsp;\n                {w.text ? (\n                  <b>{w.text}</b>\n                ) : w.html ? (\n                  <StyledTappableContents\n                    dangerouslySetInnerHTML={{ __html: w.html }}\n                  />\n                ) : (\n                  '[no text found]'\n                )}\n              </ListEntry>\n            ))}\n          </ul>\n        </div>\n      )}\n      {Boolean(tooClose.length) && (\n        <div>\n          <h3\n            style={{\n              marginTop: underMinSize.length ? '.5rem' : '0',\n            }}\n          >\n            Touch targets close together{' '}\n          </h3>\n          <p>\n            These tappable elements are less than {RECOMMENDED_DISTANCE}px from\n            at least one other tappable element:\n          </p>\n          <ul>\n            {tooClose.map((w, i) => (\n              <ListEntry key={i}>\n                <code>{w.type}</code> with content&nbsp;&nbsp;\n                {w.text ? (\n                  <b>{w.text}</b>\n                ) : w.html ? (\n                  <StyledTappableContents\n                    dangerouslySetInnerHTML={{ __html: w.html }}\n                  />\n                ) : (\n                  '[no text found]'\n                )}\n              </ListEntry>\n            ))}\n          </ul>\n        </div>\n      )}\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.nngroup.com/articles/touch-target-size/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Touch target size article from the Nielsen Norman Group\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://web.dev/accessible-tap-targets/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Tap target size recommendations from Google\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst convertToBool = (num) => (num > 0 ? 1 : 0)\n\nconst Wrapper = ({ theme, children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>{children}</Container>\n    </ThemeProvider>\n  )\n}\n\nexport const Loading = withTheme(({ theme }) => (\n  <Wrapper theme={theme}>\n    <StyledBanner>\n      <Spinner />\n      <span>Running scan...</span>\n    </StyledBanner>\n  </Wrapper>\n))\n\nconst Hints = ({ container, theme }) => {\n  const [warnings, setWarnings] = React.useState(undefined)\n  const [scanComplete, setScanComplete] = React.useState(false)\n  const [rescan, setRescan] = React.useState(0)\n\n  React.useEffect(() => {\n    setScanComplete(false)\n    setWarnings(getInstantWarnings(container))\n    return getScheduledWarnings(container, setWarnings, setScanComplete)\n  }, [container, rescan])\n\n  const warningCount = React.useMemo(\n    () =>\n      warnings\n        ? Object.keys(warnings).reduce((acc, key) => {\n            const curr = warnings[key]\n            const count = Array.isArray(curr)\n              ? convertToBool(curr.length)\n              : //touchTarget returns an object not an array\n                Object.keys(curr)\n                  .map((key) => curr[key])\n                  .reduce((acc, curr) => {\n                    return acc + convertToBool(curr.length)\n                  }, 0)\n            return acc + count\n          }, 0)\n        : 0,\n    [warnings]\n  )\n\n  // Before counting, show the Loading state\n  if (!warnings) {\n    return <Loading />\n  }\n\n  const onRescanClick = () => setRescan((prev) => prev + 1)\n\n  if (warningCount === 0 && scanComplete) {\n    return (\n      <Wrapper theme={theme}>\n        <StyledBanner>\n          <span>Scan complete! No issues found.</span>\n          <StyledRescanButton onClick={onRescanClick} type=\"button\">\n            Rescan\n          </StyledRescanButton>\n        </StyledBanner>\n      </Wrapper>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <StyledBanner>\n          {scanComplete ? (\n            <Fragment>\n              <span>Scan complete! {warningCount} issues found.</span>\n              <StyledRescanButton onClick={onRescanClick} type=\"button\">\n                Rescan\n              </StyledRescanButton>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Spinner />\n              <span>\n                {warningCount > 0\n                  ? `Running scan - ${warningCount} issues found so far`\n                  : 'Running scan'}\n                ...\n              </span>\n            </Fragment>\n          )}\n        </StyledBanner>\n        <TouchTargetWarnings warnings={warnings.touchTarget} />\n        <AutocompleteWarnings warnings={warnings.autocomplete} />\n        {/* <TooWideWarnings warnings={warnings.tooWide} container={container} /> */}\n        <InputTypeWarnings warnings={warnings.inputType} />\n        <InputTypeNumberWarnings warnings={warnings.inputTypeNumber} />\n        <HeightWarnings warnings={warnings.height} />\n        <TapWarnings warnings={warnings.tapHighlight} />\n        <ActiveWarnings warnings={warnings.active} />\n        <SrcsetWarnings warnings={warnings.srcset} />\n        <BackgroundImageWarnings warnings={warnings.backgroundImg} />\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nexport default withTheme(Hints)\n","import React from 'react'\nimport { addons, types } from '@storybook/addons'\nimport { STORY_RENDERED } from '@storybook/core-events'\nimport { useChannel, useAddonState } from '@storybook/api'\nimport { AddonPanel } from '@storybook/components'\nimport Hints, { Loading } from './Hints'\n\nconst ADDON_ID = 'mobile-hints'\nconst PARAM_KEY = 'mobile-hints'\nconst PANEL_ID = `${ADDON_ID}/panel`\n\nconst viewportId = 'storybook/viewport'\nconst noViewport = 'reset'\nconst defaultViewport = 'mobile1'\n\nconst ViewportManager = ({ active }) => {\n  const [viewportState, setViewportState] = useAddonState(viewportId)\n  const cachedState = React.useRef(null)\n  React.useEffect(() => {\n    if (cachedState.current && !active) {\n      setViewportState({\n        selected: cachedState.current,\n      })\n      cachedState.current = null\n    } else {\n      if (active && (!viewportState || viewportState.selected === noViewport)) {\n        cachedState.current = noViewport\n        setViewportState({\n          selected: defaultViewport,\n        })\n      }\n    }\n  }, [active]) // eslint-disable-line\n\n  return null\n}\n\nconst StateWrapper = ({ children }) => {\n  const [storyId, setStoryId] = React.useState('')\n\n  useChannel({\n    [STORY_RENDERED]: (...args) => {\n      setStoryId(args)\n    },\n  })\n  return React.cloneElement(children, {\n    storyId,\n  })\n}\n\nconst getContainer = () => {\n  const iframe = document.getElementById('storybook-preview-iframe')\n  if (!iframe) return null\n  return iframe.contentDocument\n}\n\nconst delay = 2000\nconst MyPanel = ({ active, storyId }) => {\n  const [html, setHTML] = React.useState(undefined)\n\n  React.useEffect(() => {\n    // clear HTML when storyId changes\n    setHTML(undefined)\n    // check for container\n    let timeoutId = undefined\n    const checkContainer = () => {\n      const container = getContainer()\n      if (!container || !container.body) {\n        clearTimeout(timeoutId)\n        timeoutId = setTimeout(checkContainer, delay)\n      } else {\n        setHTML(container.body.innerHTML)\n      }\n    }\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(checkContainer, delay)\n    return () => clearTimeout(timeoutId)\n  }, [storyId])\n\n  const container = getContainer()\n\n  if (!active) return null\n\n  if (!html || !container) {\n    return <Loading />\n  }\n\n  return <Hints container={container} />\n}\n\naddons.register(ADDON_ID, () => {\n  const render = ({ active, key }) => {\n    return (\n      <React.Fragment key=\"storybook-mobile\">\n        <ViewportManager active={active} />\n        <AddonPanel key={key} active={active}>\n          <StateWrapper active={active}>\n            <MyPanel key={key} active={active} />\n          </StateWrapper>\n        </AddonPanel>\n      </React.Fragment>\n    )\n  }\n  const title = 'Mobile'\n\n  addons.add(PANEL_ID, {\n    type: types.PANEL,\n    title,\n    render,\n    paramKey: PARAM_KEY,\n  })\n})\n"],"names":["getDomPath","el","stack","parentNode","sibCount","sibIndex","i","childNodes","length","sib","nodeName","hasAttribute","id","unshift","toLowerCase","classList","toString","tagName","toFilter","filter","includes","join","getTouchTargetSizeWarning","getTapHighlightWarnings","getSrcsetWarnings","getBackgroundImageWarnings","getActiveWarnings","get100vhWarnings","getElements","container","tag","Array","from","querySelectorAll","getStylesheetRules","sheets","k","rules","cssRules","e","getNodeName","attachLabels","inputs","map","input","labelText","labels","innerText","parentElement","label","querySelector","path","type","textInputs","text","search","tel","url","email","number","password","getAutocompleteWarnings","warnings","currentType","getAttribute","autocomplete","getInputTypeNumberWarnings","getInputTypeWarnings","concat","isInside","dangerZone","bounding","top","bottom","left","right","toPresent","width","height","close","html","innerHTML","Math","floor","elements","suspectElements","Set","len","underMinSize","tooClose","getBoundingClientRect","susEl","isUnderMinSize","present","push","_context","buttons","links","result","getComputedStyle","_context3","images","srcSet","img","src","Boolean","match","parseInt","naturalWidth","alt","_context4","backgroundImageRegex","elsWithBackgroundImage","style","test","clientWidth","styleDict","Map","Object","keys","styleSheets","forEach","rule","matches","selectorText","set","get","responsiveBackgroundImgRegex","entries","styles","some","bg","backgroundImage","undefined","_context5","getActiveStyles","activeRegex","ruleNoPseudoClass","replace","_context6","getOriginalStyles","cssText","vhWarning","find","css","_context7","schedule","iterator","scheduler","createScheduler","chunkBudget","task","runTask","abort","abortTask","tagStyles","StyledWarningTag","styled","div","Warning","React","aria-hidden","focusable","role","xmlns","viewBox","fill","d","StyledInfoTag","Hint","data-prefix","data-icon","className","Spacer","StyledTappableContents","DemoImg","ListEntry","li","props","nostyle","Container","theme","typography","size","s2","color","mediumlight","medium","StyledBanner","StyledRescanButton","button","Spinner","fixText","ActiveWarnings","href","target","rel","w","key","dangerouslySetInnerHTML","__html","marginTop","TapWarnings","AutocompleteWarnings","InputTypeWarnings","InputTypeNumberWarnings","HeightWarnings","BackgroundImageWarnings","SrcsetWarnings","TouchTargetWarnings","convertToBool","num","Wrapper","ThemeProvider","children","Loading","withTheme","useState","setWarnings","scanComplete","setScanComplete","setRescan","useEffect","inputType","inputTypeNumber","getInstantWarnings","setState","setComplete","analyses","tapHighlight","srcset","backgroundImg","touchTarget","active","analysesArray","remaining","then","prev","getScheduledWarnings","warningCount","useMemo","reduce","acc","curr","isArray","onRescanClick","onClick","Fragment","ViewportManager","useAddonState","viewportState","setViewportState","cachedState","useRef","current","selected","StateWrapper","storyId","setStoryId","useChannel","STORY_RENDERED","cloneElement","getContainer","iframe","document","getElementById","contentDocument","MyPanel","setHTML","timeoutId","clearTimeout","setTimeout","checkContainer","body","Hints","addons","register","add","ADDON_ID","types","PANEL","title","render","AddonPanel","paramKey"],"mappings":"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"}