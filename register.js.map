{"version":3,"file":"register.js","sources":["src/getDomPath.js","src/utils.js","src/Hints.js","src/register.js"],"sourcesContent":["function getDomPath(el) {\n  var stack = []\n  while (el.parentNode) {\n    let sibCount = 0\n    let sibIndex = 0\n    for (var i = 0; i < el.parentNode.childNodes.length; i++) {\n      var sib = el.parentNode.childNodes[i]\n      if (sib.nodeName === el.nodeName) {\n        if (sib === el) {\n          sibIndex = sibCount\n        }\n        sibCount++\n      }\n    }\n    if (el.hasAttribute('id') && el.id !== '') {\n      stack.unshift(el.nodeName.toLowerCase() + '#' + el.id)\n    } else if (el.classList.toString() !== '' && el.tagName !== 'BODY') {\n      stack.unshift(el.nodeName.toLowerCase() + '.' + el.classList.toString())\n    } else if (sibCount > 1) {\n      stack.unshift(el.nodeName.toLowerCase() + ':eq(' + sibIndex + ')')\n    } else {\n      stack.unshift(el.nodeName.toLowerCase())\n    }\n    el = el.parentNode\n  }\n  const toFilter = ['html', 'body', 'div#root']\n  return stack.filter((el) => !toFilter.includes(el)).join(' > ')\n}\n\nexport default getDomPath\n","import getDomPath from './getDomPath'\nimport { createScheduler } from 'lrt'\n\nconst getElements = (container, tag) =>\n  Array.from(container.querySelectorAll(tag))\n\nconst getStylesheetRules = (sheets, k) => {\n  let rules = []\n  try {\n    rules = Array.from(sheets[k].rules || sheets[k].cssRules)\n  } catch (e) {\n    //\n  }\n  return rules\n}\n\nconst getNodeName = (el) =>\n  el.nodeName === 'A'\n    ? 'a'\n    : el.nodeName === 'BUTTON'\n    ? 'button'\n    : `${el.nodeName.toLowerCase()}[role=\"button\"]`\n\nconst attachLabels = (inputs, container) =>\n  inputs.map((input) => {\n    let labelText = ''\n    if (input.labels && input.labels[0]) {\n      labelText = input.labels[0].innerText\n    } else if (input.parentElement.nodeName === 'LABEL') {\n      labelText = input.parentElement.innerText\n    } else if (input.id) {\n      const label = container.querySelector(`label[for=\"${input.id}\"]`)\n      if (label) labelText = label.innerText\n    }\n    return {\n      labelText,\n      path: getDomPath(input),\n      type: input.type,\n    }\n  })\n\nconst textInputs = {\n  text: true,\n  search: true,\n  tel: true,\n  url: true,\n  email: true,\n  number: true,\n  password: true,\n}\n\nconst getAutocompleteWarnings = (container) => {\n  const inputs = getElements(container, 'input')\n  const warnings = inputs.filter((input) => {\n    const currentType = input.getAttribute('type')\n    const autocomplete = input.getAttribute('autocomplete')\n    return textInputs[currentType] && !autocomplete\n  })\n  return attachLabels(warnings, container)\n}\n\nconst getInputTypeNumberWarnings = (container) => {\n  const inputs = getElements(container, 'input[type=\"number\"]')\n  return attachLabels(inputs)\n}\n\nconst getInputTypeWarnings = (container) => {\n  const inputs = getElements(container, 'input[type=\"text\"]')\n    .concat(getElements(container, 'input:not([type])'))\n    .filter((input) => !input.getAttribute('inputmode'))\n  return attachLabels(inputs, container)\n}\n\nexport const getInstantWarnings = (container) => ({\n  autocomplete: getAutocompleteWarnings(container),\n  inputType: getInputTypeWarnings(container),\n  inputTypeNumber: getInputTypeNumberWarnings(container),\n})\n\n// SCHEDULED ANALYSES\n// We schedule these so the UI does not lock up while they're running\n\nconst isInside = (dangerZone, bounding) =>\n  bounding.top <= dangerZone.bottom &&\n  bounding.bottom >= dangerZone.top &&\n  bounding.left <= dangerZone.right &&\n  bounding.right >= dangerZone.left\n\nconst toPresent = ({ el, bounding: { width, height }, close }) => ({\n  type:\n    el.nodeName === 'A'\n      ? 'a'\n      : el.nodeName === 'BUTTON'\n      ? 'button'\n      : `${el.nodeName.toLowerCase()}[role=\"button\"]`,\n  path: getDomPath(el),\n  text: el.innerText,\n  html: el.innerHTML,\n  width: Math.floor(width),\n  height: Math.floor(height),\n  close,\n})\n\nexport const MIN_SIZE = 32\nexport const RECOMMENDED_DISTANCE = 8\n//const RECOMMENDED_SIZE = 48\n\nconst checkMinSize = ({ height, width }) =>\n  height < MIN_SIZE || width < MIN_SIZE\n\nfunction* getTouchTargetSizeWarning(container) {\n  const elements = getElements(container, 'button')\n    .concat(getElements(container, '[role=\"button\"]'))\n    .concat(getElements(container, 'a'))\n\n  const suspectElements = Array.from(new Set(elements)).map((el) => [\n    el,\n    el.getBoundingClientRect(),\n  ])\n\n  const len = elements.length\n  const underMinSize = []\n  const tooClose = []\n\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    const bounding = el.getBoundingClientRect()\n\n    const dangerZone = {\n      top: bounding.top - RECOMMENDED_DISTANCE,\n      left: bounding.left - RECOMMENDED_DISTANCE,\n      right: bounding.right + RECOMMENDED_DISTANCE,\n      bottom: bounding.bottom + RECOMMENDED_DISTANCE,\n    }\n\n    const close = suspectElements.filter(\n      ([susEl, susBounding]) =>\n        susEl !== el && isInside(dangerZone, susBounding)\n    )\n\n    const isUnderMinSize = checkMinSize(bounding)\n    if (isUnderMinSize || close.length > 0) {\n      const present = toPresent({ el, bounding, close })\n      if (isUnderMinSize) {\n        underMinSize.push(present)\n      }\n      if (close.length > 0) {\n        tooClose.push(present)\n      }\n    }\n    yield i\n  }\n\n  return { tooClose, underMinSize }\n}\n\nfunction* getTapHighlightWarnings(container) {\n  const buttons = getElements(container, 'button').concat(\n    getElements(container, '[role=\"button\"]')\n  )\n  const links = getElements(container, 'a')\n  const elements = buttons.concat(links)\n  const len = elements.length\n\n  const result = []\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    if (\n      getComputedStyle(el)['-webkit-tap-highlight-color'] === 'rgba(0, 0, 0, 0)'\n    ) {\n      result.push({\n        type: getNodeName(el),\n        text: el.innerText,\n        html: el.innerHTML,\n        path: getDomPath(el),\n      })\n    }\n    yield i\n  }\n\n  return result\n}\n\nconst MAX_WIDTH = 600\n\nfunction* getSrcsetWarnings(container) {\n  const images = getElements(container, 'img')\n  const len = images.length\n\n  const result = []\n\n  for (let i = 0; i < len; i++) {\n    const img = images[i]\n    const srcSet = img.getAttribute('srcset')\n    const src = img.getAttribute('src')\n    if (!srcSet && src) {\n      const isSVG = Boolean(src.match(/svg$/))\n      if (!isSVG) {\n        const isLarge =\n          parseInt(getComputedStyle(img).width, 10) > MAX_WIDTH ||\n          img.naturalWidth > MAX_WIDTH\n        if (isLarge) {\n          result.push({\n            src: img.src,\n            path: getDomPath(img),\n            alt: img.alt,\n          })\n        }\n      }\n    }\n    yield i\n  }\n\n  return result\n}\n\nfunction* getBackgroundImageWarnings(container) {\n  const backgroundImageRegex = /url\\(\".*?(.png|.jpg|.jpeg)\"\\)/\n  const elsWithBackgroundImage = getElements(container, '#root *').filter(\n    (el) => {\n      const style = getComputedStyle(el)\n      return (\n        style['background-image'] &&\n        backgroundImageRegex.test(style['background-image']) &&\n        // HACK\n        // ideally, we would make a new image element and check its \"naturalWidth\"\n        // to get a better idea of the size of the background image, this is a hack\n        el.clientWidth > 200\n      )\n    }\n  )\n\n  if (!elsWithBackgroundImage.length) return []\n\n  const styleDict = new Map()\n\n  Object.keys(container.styleSheets).forEach((k) => {\n    getStylesheetRules(container.styleSheets, k).forEach((rule) => {\n      if (rule) {\n        try {\n          elsWithBackgroundImage.forEach((el) => {\n            if (el.matches(rule.selectorText)) {\n              styleDict.set(el, (styleDict.get(el) || []).concat(rule))\n            }\n          })\n        } catch (e) {\n          // catch errors in safari\n        }\n      }\n    })\n  })\n\n  const responsiveBackgroundImgRegex = /-webkit-min-device-pixel-ratio|min-resolution|image-set/\n\n  const result = []\n  const elements = Array.from(styleDict.entries())\n  const len = elements.length\n\n  for (let i = 0; i < len; i++) {\n    const [el, styles] = elements[i]\n    if (styles) {\n      const requiresResponsiveWarning = styles.some(\n        (style) => !responsiveBackgroundImgRegex.test(style)\n      )\n      if (requiresResponsiveWarning) {\n        const bg = getComputedStyle(el).backgroundImage\n        const src = bg.match(/url\\(\"(.*)\"\\)/)\n          ? bg.match(/url\\(\"(.*)\"\\)/)[1]\n          : undefined\n        result.push({\n          path: getDomPath(el),\n          src,\n        })\n      }\n    }\n    yield i\n  }\n\n  return result\n}\n\nexport const getActiveStyles = function (container, el) {\n  const sheets = container.styleSheets\n  const result = []\n\n  const activeRegex = /:active$/\n\n  Object.keys(sheets).forEach((k) => {\n    getStylesheetRules(sheets, k).forEach((rule) => {\n      if (rule && rule.selectorText && rule.selectorText.match(activeRegex)) {\n        const ruleNoPseudoClass = rule.selectorText.replace(activeRegex, '')\n        try {\n          if (el.matches(ruleNoPseudoClass)) {\n            result.push(rule)\n          }\n        } catch (e) {\n          // safari\n        }\n      }\n    })\n  })\n  return result\n}\n\nfunction* getActiveWarnings(container) {\n  const buttons = getElements(container, 'button').concat(\n    getElements(container, '[role=\"button\"]')\n  )\n  const links = getElements(container, 'a')\n  const elements = buttons.concat(links)\n  const len = elements.length\n  const result = []\n\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    const hasActive = getActiveStyles(container, el)\n    if (hasActive.length) {\n      result.push({\n        type: getNodeName(el),\n        text: el.innerText,\n        html: el.innerHTML,\n        path: getDomPath(el),\n      })\n    }\n    yield i\n  }\n\n  return result\n}\n\nexport const getOriginalStyles = (container, el) => {\n  const sheets = container.styleSheets\n  let result = []\n  Object.keys(sheets).forEach((k) => {\n    const rules = getStylesheetRules(sheets, k)\n    rules.forEach((rule) => {\n      if (rule) {\n        try {\n          if (el.matches(rule.selectorText)) {\n            result.push(rule.cssText)\n          }\n        } catch (e) {\n          // catch errors in safari\n        }\n      }\n    })\n  })\n\n  return result\n}\n\nfunction* get100vhWarnings(container) {\n  const elements = getElements(container, '#root *')\n  const len = elements.length\n  const result = []\n\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    const styles = getOriginalStyles(container, el)\n    const vhWarning = styles.find((style) => /100vh/.test(style))\n    if (vhWarning) {\n      result.push({ el, css: vhWarning, path: getDomPath(el) })\n    }\n    yield i\n  }\n\n  return result\n}\n\nconst schedule = (iterator) => {\n  // 100ms is the threshold where users start to notice UI lag\n  // higher values increase lag but do not noticeably improve processing time so 100ms is the sweet spot\n  const scheduler = createScheduler({ chunkBudget: 100 })\n  const task = scheduler.runTask(iterator)\n  return { task, abort: () => scheduler.abortTask(task) }\n}\n\nexport const getScheduledWarnings = (container, setState, setComplete) => {\n  const analyses = {\n    tapHighlight: schedule(getTapHighlightWarnings(container)),\n    srcset: schedule(getSrcsetWarnings(container)),\n    backgroundImg: schedule(getBackgroundImageWarnings(container)),\n    touchTarget: schedule(getTouchTargetSizeWarning(container)),\n    active: schedule(getActiveWarnings(container)),\n    height: schedule(get100vhWarnings(container)),\n  }\n  const analysesArray = Object.keys(analyses)\n  let remaining = analysesArray.length\n  analysesArray.forEach((key) => {\n    //const start = performance.now()\n    analyses[key].task.then((result) => {\n      //console.log(key, performance.now() - start)\n      setState((prev) => ({ ...prev, [key]: result }))\n      if (--remaining === 0) {\n        setComplete(true)\n      }\n    })\n  })\n  return () => analysesArray.forEach((key) => analyses[key].abort())\n}\n","import React, { Fragment } from 'react'\nimport { styled } from '@storybook/theming'\nimport {\n  getInstantWarnings,\n  getScheduledWarnings,\n  MIN_SIZE,\n  RECOMMENDED_DISTANCE,\n} from './utils'\n\nconst accessibleBlue = '#0965df'\nconst warning = '#bd4700'\n\nconst tagStyles = `\n  padding: .25rem .5rem;\n  font-weight: bold;\n  display:inline-block;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n  svg {\n    margin-right: .25rem;\n    display: inline-block;\n    height: .7rem;\n    line-height: 1;\n    position: relative;\n    top: .03rem;\n    letter-spacing: .01rem;\n  }\n`\n\nconst StyledWarningTag = styled.div`\n  color: ${warning};\n  background-color: hsl(41, 100%, 92%);\n  ${tagStyles}\n`\n\nconst Warning = () => (\n  <StyledWarningTag>\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 576 512\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"\n      ></path>\n    </svg>\n    warning\n  </StyledWarningTag>\n)\n\nconst StyledInfoTag = styled.div`\n  ${tagStyles}\n  color: ${accessibleBlue};\n  background-color: hsla(214, 92%, 45%, 0.1);\n`\nconst Hint = () => (\n  <StyledInfoTag>\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fas\"\n      data-icon=\"magic\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      className=\"svg-inline--fa fa-magic fa-w-16 fa-5x\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M224 96l16-32 32-16-32-16-16-32-16 32-32 16 32 16 16 32zM80 160l26.66-53.33L160 80l-53.34-26.67L80 0 53.34 53.33 0 80l53.34 26.67L80 160zm352 128l-26.66 53.33L352 368l53.34 26.67L432 448l26.66-53.33L512 368l-53.34-26.67L432 288zm70.62-193.77L417.77 9.38C411.53 3.12 403.34 0 395.15 0c-8.19 0-16.38 3.12-22.63 9.38L9.38 372.52c-12.5 12.5-12.5 32.76 0 45.25l84.85 84.85c6.25 6.25 14.44 9.37 22.62 9.37 8.19 0 16.38-3.12 22.63-9.37l363.14-363.15c12.5-12.48 12.5-32.75 0-45.24zM359.45 203.46l-50.91-50.91 86.6-86.6 50.91 50.91-86.6 86.6z\"\n        className=\"\"\n      ></path>\n    </svg>\n    hint\n  </StyledInfoTag>\n)\n\nconst Spacer = styled.div`\n  padding: 1rem;\n`\n\nconst StyledTappableContents = styled.div`\n  display: inline-block;\n  padding-top: 0.25rem;\n  height: 2rem;\n  min-width: 1rem;\n  width: auto;\n  background-color: hsla(0, 0%, 50%, 0.1);\n  border-radius: 3px;\n  li {\n    list-style-type: none;\n  }\n  img,\n  svg {\n    max-height: 2rem !important;\n    min-height: 1rem !important;\n    width: auto !important;\n  }\n`\n\nconst DemoImg = styled.img`\n  height: 4rem;\n  width: auto;\n  max-width: 100%;\n  background-color: hsla(0, 0%, 0%, 0.2);\n`\n\nconst ListEntry = styled.li`\n  margin-bottom: 0.5rem;\n  ${(props) => (props.nostyle ? 'list-style-type: none;' : '')};\n`\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n\n  font-size: ${(props) => props.theme.typography.size.s2}px;\n\n  p {\n    line-height: 1.4;\n  }\n\n  h3 {\n    font-size: ${(props) => props.theme.typography.size.s2}px;\n    font-weight: bold;\n    margin-bottom: 0.5rem;\n    margin-top: 0;\n  }\n\n  code {\n    background: hsla(0, 0%, 50%, 0.1);\n    border-radius: 3px;\n  }\n\n  summary {\n    cursor: pointer;\n    display: block;\n    margin-right: 1rem;\n    padding: 0.2rem 0.3rem;\n    border-radius: 5px;\n    color: ${accessibleBlue};\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 3px ${(props) => props.theme.color.mediumlight};\n    }\n  }\n\n  ul {\n    padding-left: 1.25rem;\n    max-height: 12rem;\n    overflow: auto;\n    padding-bottom: 0.5rem;\n    li {\n      margin-bottom: 0.3rem;\n    }\n  }\n  a {\n    text-decoration: none;\n    color: ${accessibleBlue};\n    &:hover {\n      border-bottom: 1px solid ${accessibleBlue};\n    }\n  }\n  > div {\n    border-bottom: 1px solid ${(props) => props.theme.color.medium};\n    border-right: 1px solid ${(props) => props.theme.color.medium};\n  }\n`\n\nconst StyledBanner = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 0.75rem;\n  grid-column: 1 / -1;\n  height: 2.875rem;\n`\n\nconst StyledRescanButton = styled.button`\n  margin-left: 0.5rem;\n  border-width: 1px;\n  border-radius: 3px;\n  padding: 0.2rem 0.5rem;\n  cursor: pointer;\n  font-family: inherit;\n  color: inherit;\n  border: none;\n  font-size: 100%;\n  background-color: transparent;\n  appearance: none;\n  box-shadow: none;\n  border: 1px solid;\n  &:hover {\n    background-color: hsla(0, 0%, 0%, 0.15);\n  }\n`\n\nconst Spinner = styled.div`\n  cursor: progress;\n  display: inline-block;\n  overflow: hidden;\n  position: relative;\n  margin-right: 0.7rem;\n  height: 1.25rem;\n  width: 1.25rem;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 50%;\n  border-color: rgba(97, 97, 97, 0.29);\n  border-top-color: rgb(100, 100, 100);\n  animation: spinner 0.7s linear infinite;\n  mix-blend-mode: difference;\n\n  @keyframes spinner {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nconst fixText = 'Learn more'\n\nconst ActiveWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n      <h3>\n        <code>:active</code> styles on iOS\n      </h3>\n      <p>\n        <code>:active</code> styles will only appear in iOS{' '}\n        <a\n          href=\"https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          if a touch listener is added to the element or one of its ancestors\n        </a>\n        . Once activated in this manner, <code>:active</code> styles (along with{' '}\n        <code>:hover</code> styles) will be applied immediately in iOS when a\n        user taps, possibly creating a confusing UX. (On Android,{' '}\n        <code>:active</code> styles are applied with a slight delay to allow the\n        user to use gestures like scroll without necessarily activating{' '}\n        <code>:active</code> styles.)\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>{w.type}</code> with content&nbsp;&nbsp;\n            {w.text ? (\n              <b>{w.text}</b>\n            ) : w.html ? (\n              <StyledTappableContents\n                dangerouslySetInnerHTML={{ __html: w.html }}\n              />\n            ) : (\n              '[no text found]'\n            )}\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p style={{ marginTop: '1rem' }}>\n          <a\n            href=\"https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari/33681490#33681490\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Relevant Stack Overflow thread\n          </a>\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst TapWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n      <h3>Tap style removed from tappable element</h3>\n      <p>\n        These elements have an invisible{' '}\n        <code>-webkit-tap-highlight-color</code>. While this might be\n        intentional, please verify that they have appropriate tap indication\n        styles added through other means.\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>{w.type}</code> with content&nbsp;&nbsp;\n            {w.text ? (\n              <b>{w.text}</b>\n            ) : w.html ? (\n              <StyledTappableContents\n                dangerouslySetInnerHTML={{ __html: w.html }}\n              />\n            ) : (\n              '[no text found]'\n            )}\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p>\n          Some stylesheets remove the tap indication highlight shown on iOS and\n          Android browsers by adding the code{' '}\n          <code>-webkit-tap-highlight-color: transparent</code>. In order to\n          maintain a good mobile experience, tap styles should be added via\n          appropriate <code>:active</code> CSS styles (though, note that{' '}\n          <a\n            href=\"https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <code>:active</code> styles work inconsistently in iOS\n          </a>\n          ) , or via JavaScript on the <code>touchstart</code> event.\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst AutocompleteWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Warning />\n      <h3>\n        Input with no <code>autocomplete</code> attribute\n      </h3>\n      <p>\n        Most textual inputs should have an explicit <code>autocomplete</code>{' '}\n        attribute.\n      </p>\n      <p>\n        If you truly want to disable autocomplete, try using a{' '}\n        <a\n          href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          semantically valid but unique value rather than{' '}\n          <code>autocomplete=&quot;off&quot;</code>\n        </a>\n        , which doesn&apos;t work in Chrome.\n      </p>\n      <p>\n        Note: <code>autocomplete</code> is styled as <code>autoComplete</code>{' '}\n        in JSX.\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>input type=&quot;{w.type}&quot;</code> and label{' '}\n            <b>{w.labelText || '[no label found]'}</b>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li>\n            <a\n              href=\"https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Autocomplete documentation by Google\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Autocomplete documentation by Mozilla\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst InputTypeWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n\n      <h3>\n        Plain input type <code>text</code> detected\n      </h3>\n      <p>\n        This will render the default text keyboard on mobile (which could very\n        well be what you want!) If you haven&apos;t already, take a moment to\n        make sure this is correct. You can use{' '}\n        <a\n          href=\"https://better-mobile-inputs.netlify.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          this tool\n        </a>{' '}\n        to explore keyboard options.\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>input type=&quot;{w.type}&quot;</code> and label{' '}\n            <b>{w.labelText || '[no label found]'}</b>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p>\n          <a\n            href=\"https://css-tricks.com/better-form-inputs-for-better-mobile-user-experiences/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Article reviewing the importance of using correct input types on the\n            mobile web from CSS Tricks.\n          </a>\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst InputTypeNumberWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n\n      <h3>\n        Input type <code>number</code> detected\n      </h3>\n      <p>\n        <code>\n          &lt;input type=&quot;text&quot; inputmode=&quot;decimal&quot;/&gt;\n        </code>{' '}\n        could give you improved usability over{' '}\n        <code>&lt;input type=&quot;number&quot; /&gt;</code>.\n      </p>\n      <p>\n        Note: <code>inputmode</code> is styled as <code>inputMode</code> in JSX.{' '}\n      </p>\n      <ul>\n        {warnings.map((w, i) => (\n          <ListEntry key={i}>\n            <code>input type=&quot;{w.type}&quot;</code> and label{' '}\n            <b>{w.labelText || '[no label found]'}</b>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p>\n          <a\n            href=\"https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Overview of the issues with{' '}\n            <code>input type=&quot;number&quot;</code> from gov.uk.\n          </a>\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst HeightWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n      <h3>\n        Usage of <code>100vh</code> CSS\n      </h3>\n      <p>\n        <a\n          href=\"https://chanind.github.io/javascript/2019/09/28/avoid-100vh-on-mobile-web.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Viewport units are tricky on mobile.\n        </a>{' '}\n        On some mobile browers, depending on scroll position, <code>100vh</code>{' '}\n        might take up more than 100% of screen height due to browser chrome like\n        the address bar.\n      </p>\n      <ul>\n        {warnings.map(({ path }, i) => (\n          <ListEntry key={i}>\n            <code>{path}</code>\n          </ListEntry>\n        ))}\n      </ul>\n    </Spacer>\n  )\n}\n\nconst BackgroundImageWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Warning />\n      <h3>Non-dynamic background image</h3>\n      <p>\n        Downloading larger-than-necessary images hurts performance for users on\n        mobile. You can use{' '}\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/image-set\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <code>image-set</code>\n        </a>{' '}\n        to serve an appropriate background image based on the user&apos;s device\n        resolution.\n      </p>\n      <ul>\n        {warnings.map(({ src, alt }, i) => (\n          <ListEntry key={i} nostyle>\n            <div>\n              <DemoImg src={src} alt={alt} />\n            </div>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li>\n            <a\n              href=\"https://css-tricks.com/responsive-images-css/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Article discussing responsive background images in greater detail,\n              including the interaction of <code>image-set</code> with media\n              queries, from CSS Tricks.\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst SrcsetWarnings = ({ warnings }) => {\n  if (!warnings || !warnings.length) return null\n  return (\n    <Spacer>\n      <Warning />\n      <h3>\n        Large image without <code>srcset</code>\n      </h3>\n      <p>\n        Downloading larger-than-necessary images hurts performance for users on\n        mobile. You can use <code>srcset</code> to customize image sizes for\n        different device resolutions and sizes.\n      </p>\n      <ul>\n        {warnings.map(({ src, alt }, i) => (\n          <ListEntry key={i} nostyle>\n            <div>\n              <DemoImg src={src} alt={alt} />\n            </div>\n          </ListEntry>\n        ))}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li>\n            <a\n              href=\"https://cloudfour.com/thinks/responsive-images-the-simple-way\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Summary of the why and how of responsive images\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.responsivebreakpoints.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              A tool to generate responsive images\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst TouchTargetWarnings = ({ warnings }) => {\n  if (!warnings) return null\n  const { underMinSize, tooClose } = warnings\n  if (!underMinSize.length && !tooClose.length) return null\n  return (\n    <Spacer>\n      <Warning />\n\n      {Boolean(underMinSize.length) && (\n        <div>\n          <h3>Small touch target</h3>\n          <p>\n            With heights and/or widths of less than {MIN_SIZE}px, these tappable\n            elements could be difficult for users to press:\n          </p>\n          <ul>\n            {underMinSize.map((w, i) => (\n              <ListEntry key={i}>\n                <code>{w.type}</code> with content&nbsp;&nbsp;\n                {w.text ? (\n                  <b>{w.text}</b>\n                ) : w.html ? (\n                  <StyledTappableContents\n                    dangerouslySetInnerHTML={{ __html: w.html }}\n                  />\n                ) : (\n                  '[no text found]'\n                )}\n              </ListEntry>\n            ))}\n          </ul>\n        </div>\n      )}\n      {Boolean(tooClose.length) && (\n        <div>\n          <h3\n            style={{\n              marginTop: underMinSize.length ? '.5rem' : '0',\n            }}\n          >\n            Touch targets close together{' '}\n          </h3>\n          <p>\n            These tappable elements are less than {RECOMMENDED_DISTANCE}px from\n            at least one other tappable element:\n          </p>\n          <ul>\n            {tooClose.map((w, i) => (\n              <ListEntry key={i}>\n                <code>{w.type}</code> with content&nbsp;&nbsp;\n                {w.text ? (\n                  <b>{w.text}</b>\n                ) : w.html ? (\n                  <StyledTappableContents\n                    dangerouslySetInnerHTML={{ __html: w.html }}\n                  />\n                ) : (\n                  '[no text found]'\n                )}\n              </ListEntry>\n            ))}\n          </ul>\n        </div>\n      )}\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li>\n            <a\n              href=\"https://www.nngroup.com/articles/touch-target-size/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Touch target size article from the Nielsen Norman Group\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://web.dev/accessible-tap-targets/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Tap target size recommendations from Google\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst convertToBool = (num) => (num > 0 ? 1 : 0)\n\nconst getIssuesFound = (warningCount) =>\n  `${warningCount} issue${warningCount !== 1 ? 's' : ''} found`\n\nexport const Loading = () => (\n  <StyledBanner>\n    <Spinner />\n    <span>Running scan...</span>\n  </StyledBanner>\n)\n\nconst Hints = ({ container }) => {\n  const [warnings, setWarnings] = React.useState(undefined)\n  const [scanComplete, setScanComplete] = React.useState(false)\n  const [rescan, setRescan] = React.useState(0)\n\n  React.useEffect(() => {\n    setScanComplete(false)\n    setWarnings(getInstantWarnings(container))\n    return getScheduledWarnings(container, setWarnings, setScanComplete)\n  }, [container, rescan])\n\n  const warningCount = React.useMemo(\n    () =>\n      warnings\n        ? Object.keys(warnings).reduce((acc, key) => {\n            const curr = warnings[key]\n            const count = Array.isArray(curr)\n              ? convertToBool(curr.length)\n              : //touchTarget returns an object not an array\n                Object.keys(curr)\n                  .map((key) => curr[key])\n                  .reduce((acc, curr) => {\n                    return acc + convertToBool(curr.length)\n                  }, 0)\n            return acc + count\n          }, 0)\n        : 0,\n    [warnings]\n  )\n\n  // Before counting, show the Loading state\n  if (!warnings) {\n    return <Loading />\n  }\n\n  const onRescanClick = () => setRescan((prev) => prev + 1)\n\n  if (warningCount === 0 && scanComplete) {\n    return (\n      <StyledBanner>\n        <span>Scan complete! No issues found.</span>\n        <StyledRescanButton onClick={onRescanClick} type=\"button\">\n          Rescan\n        </StyledRescanButton>\n      </StyledBanner>\n    )\n  }\n\n  const issuesFound = getIssuesFound(warningCount)\n\n  return (\n    <Container>\n      <StyledBanner>\n        {scanComplete ? (\n          <Fragment>\n            <span>Scan complete! {issuesFound}.</span>\n            <StyledRescanButton onClick={onRescanClick} type=\"button\">\n              Rescan\n            </StyledRescanButton>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Spinner />\n            <span>\n              {warningCount > 0\n                ? `Running scan - ${issuesFound} so far`\n                : 'Running scan'}\n              ...\n            </span>\n          </Fragment>\n        )}\n      </StyledBanner>\n      <TouchTargetWarnings warnings={warnings.touchTarget} />\n      <AutocompleteWarnings warnings={warnings.autocomplete} />\n      <InputTypeWarnings warnings={warnings.inputType} />\n      <InputTypeNumberWarnings warnings={warnings.inputTypeNumber} />\n      <TapWarnings warnings={warnings.tapHighlight} />\n      <ActiveWarnings warnings={warnings.active} />\n      <SrcsetWarnings warnings={warnings.srcset} />\n      <BackgroundImageWarnings warnings={warnings.backgroundImg} />\n      <HeightWarnings warnings={warnings.height} />\n    </Container>\n  )\n}\n\nexport default Hints\n","import React from 'react'\nimport { addons, types } from '@storybook/addons'\nimport { STORY_RENDERED } from '@storybook/core-events'\nimport { useChannel, useAddonState } from '@storybook/api'\nimport { AddonPanel } from '@storybook/components'\nimport Hints, { Loading } from './Hints'\n\nconst ADDON_ID = 'mobile-hints'\nconst PARAM_KEY = 'mobile-hints'\nconst PANEL_ID = `${ADDON_ID}/panel`\n\nconst viewportId = 'storybook/viewport'\nconst noViewport = 'reset'\nconst defaultViewport = 'mobile1'\n\nconst ViewportManager = ({ active }) => {\n  const [viewportState, setViewportState] = useAddonState(viewportId)\n  const cachedState = React.useRef(null)\n  React.useEffect(() => {\n    if (cachedState.current && !active) {\n      setViewportState({\n        selected: cachedState.current,\n      })\n      cachedState.current = null\n    } else {\n      if (active && (!viewportState || viewportState.selected === noViewport)) {\n        cachedState.current = noViewport\n        setViewportState({\n          selected: defaultViewport,\n        })\n      }\n    }\n  }, [active]) // eslint-disable-line\n\n  return null\n}\n\nconst StateWrapper = ({ children }) => {\n  const [storyId, setStoryId] = React.useState('')\n\n  useChannel({\n    [STORY_RENDERED]: (...args) => {\n      setStoryId(args)\n    },\n  })\n  return React.cloneElement(children, {\n    storyId,\n  })\n}\n\nconst getContainer = () => {\n  const iframe = document.getElementById('storybook-preview-iframe')\n  if (!iframe) return null\n  return iframe.contentDocument\n}\n\nconst delay = 2000\nconst MyPanel = ({ active, storyId }) => {\n  const [html, setHTML] = React.useState(undefined)\n\n  React.useEffect(() => {\n    // clear HTML when storyId changes\n    setHTML(undefined)\n    // check for container\n    let timeoutId = undefined\n    const checkContainer = () => {\n      const container = getContainer()\n      if (!container || !container.body) {\n        clearTimeout(timeoutId)\n        timeoutId = setTimeout(checkContainer, delay)\n      } else {\n        setHTML(container.body.innerHTML)\n      }\n    }\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(checkContainer, delay)\n    return () => clearTimeout(timeoutId)\n  }, [storyId])\n\n  const container = getContainer()\n\n  if (!active) return null\n\n  if (!html || !container) {\n    return <Loading />\n  }\n\n  return <Hints container={container} />\n}\n\naddons.register(ADDON_ID, () => {\n  const render = ({ active, key }) => {\n    return (\n      <React.Fragment key=\"storybook-mobile\">\n        <ViewportManager active={active} />\n        <AddonPanel key={key} active={active}>\n          <StateWrapper active={active}>\n            <MyPanel key={key} active={active} />\n          </StateWrapper>\n        </AddonPanel>\n      </React.Fragment>\n    )\n  }\n  const title = 'Mobile'\n\n  addons.add(PANEL_ID, {\n    type: types.PANEL,\n    title,\n    render,\n    paramKey: PARAM_KEY,\n  })\n})\n"],"names":["getDomPath","el","stack","parentNode","sibCount","sibIndex","i","childNodes","length","sib","nodeName","hasAttribute","id","unshift","toLowerCase","classList","toString","tagName","toFilter","filter","includes","join","getTouchTargetSizeWarning","getTapHighlightWarnings","getSrcsetWarnings","getBackgroundImageWarnings","getActiveWarnings","get100vhWarnings","getElements","container","tag","Array","from","querySelectorAll","getStylesheetRules","sheets","k","rules","cssRules","e","getNodeName","attachLabels","inputs","map","input","labelText","labels","innerText","parentElement","label","querySelector","path","type","textInputs","text","search","tel","url","email","number","password","getAutocompleteWarnings","warnings","currentType","getAttribute","autocomplete","getInputTypeNumberWarnings","getInputTypeWarnings","concat","isInside","dangerZone","bounding","top","bottom","left","right","toPresent","width","height","close","html","innerHTML","Math","floor","elements","suspectElements","Set","getBoundingClientRect","len","underMinSize","tooClose","isUnderMinSize","present","push","_context","buttons","links","result","getComputedStyle","_context3","images","srcSet","img","src","Boolean","match","parseInt","naturalWidth","alt","_context4","backgroundImageRegex","elsWithBackgroundImage","style","test","clientWidth","styleDict","Map","Object","keys","styleSheets","forEach","rule","matches","selectorText","set","get","responsiveBackgroundImgRegex","entries","styles","some","bg","backgroundImage","undefined","_context5","getActiveStyles","activeRegex","ruleNoPseudoClass","replace","_context6","getOriginalStyles","cssText","vhWarning","find","css","_context7","schedule","iterator","scheduler","createScheduler","chunkBudget","task","runTask","abort","abortTask","tagStyles","StyledWarningTag","styled","div","Warning","React","focusable","role","xmlns","viewBox","fill","d","StyledInfoTag","Hint","className","Spacer","StyledTappableContents","DemoImg","ListEntry","li","props","nostyle","Container","theme","typography","size","s2","color","mediumlight","medium","StyledBanner","StyledRescanButton","button","Spinner","fixText","ActiveWarnings","href","target","rel","w","key","dangerouslySetInnerHTML","__html","marginTop","TapWarnings","AutocompleteWarnings","InputTypeWarnings","InputTypeNumberWarnings","HeightWarnings","BackgroundImageWarnings","SrcsetWarnings","TouchTargetWarnings","convertToBool","num","Loading","Hints","useState","setWarnings","scanComplete","setScanComplete","setRescan","useEffect","inputType","inputTypeNumber","getInstantWarnings","setState","setComplete","analyses","tapHighlight","srcset","backgroundImg","touchTarget","active","analysesArray","remaining","then","prev","getScheduledWarnings","warningCount","useMemo","reduce","acc","curr","count","isArray","onRescanClick","onClick","issuesFound","getIssuesFound","Fragment","ViewportManager","useAddonState","viewportState","setViewportState","cachedState","useRef","current","selected","StateWrapper","children","storyId","setStoryId","useChannel","STORY_RENDERED","cloneElement","getContainer","iframe","document","getElementById","contentDocument","MyPanel","setHTML","timeoutId","clearTimeout","setTimeout","checkContainer","body","addons","register","add","ADDON_ID","types","PANEL","title","render","AddonPanel","paramKey"],"mappings":"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"}