{"version":3,"file":"register.modern.js","sources":["src/getDomPath.js","src/utils.js","src/Hints.js","src/register.js"],"sourcesContent":["function getDomPath(el) {\n  var stack = []\n  while (el.parentNode) {\n    let sibCount = 0\n    let sibIndex = 0\n    for (var i = 0; i < el.parentNode.childNodes.length; i++) {\n      var sib = el.parentNode.childNodes[i]\n      if (sib.nodeName === el.nodeName) {\n        if (sib === el) {\n          sibIndex = sibCount\n        }\n        sibCount++\n      }\n    }\n    if (el.hasAttribute('id') && el.id !== '') {\n      stack.unshift(el.nodeName.toLowerCase() + '#' + el.id)\n    } else if (el.classList.toString() !== '' && el.tagName !== 'BODY') {\n      stack.unshift(el.nodeName.toLowerCase() + '.' + el.classList.toString())\n    } else if (sibCount > 1) {\n      stack.unshift(el.nodeName.toLowerCase() + ':eq(' + sibIndex + ')')\n    } else {\n      stack.unshift(el.nodeName.toLowerCase())\n    }\n    el = el.parentNode\n  }\n  const toFilter = ['html', 'body', 'div#root']\n  return stack.filter((el) => !toFilter.includes(el)).join(' > ')\n}\n\nexport default getDomPath\n","import getDomPath from './getDomPath'\nimport {createScheduler} from 'lrt'\n\nconst getElements = (container, tag) =>\n  Array.from(container.querySelectorAll(tag))\n\nconst getStylesheetRules = (sheets, k) => {\n  let rules = []\n  try {\n    rules = sheets[k].rules || sheets[k].cssRules\n  } catch (e) {\n    //\n  }\n  return rules\n}\n\nconst getNodeName = (el) =>\n  el.nodeName === 'A'\n    ? 'a'\n    : el.nodeName === 'BUTTON'\n    ? 'button'\n    : `${el.nodeName.toLowerCase()}[role=\"button\"]`\n\nexport const getActiveStyles = function (container, el) {\n  const sheets = container.styleSheets\n  const result = []\n\n  const activeRegex = /:active$/\n\n  Object.keys(sheets).forEach((k) => {\n    getStylesheetRules(sheets, k).forEach((rule) => {\n      if (!rule) return\n      if (!rule.selectorText || !rule.selectorText.match(activeRegex)) return\n      const ruleNoPseudoClass = rule.selectorText.replace(activeRegex, '')\n      try {\n        if (el.matches(ruleNoPseudoClass)) {\n          result.push(rule)\n        }\n      } catch (e) {\n        // safari\n      }\n    })\n  })\n  return result.length ? result : null\n}\n\nexport const getTapHighlightWarnings = (container) => {\n  const buttons = getElements(container, 'button').concat(\n    getElements(container, '[role=\"button\"]')\n  )\n  const links = getElements(container, 'a')\n\n  const filterActiveStyles = (el) => {\n    const tapHighlight = getComputedStyle(el)['-webkit-tap-highlight-color']\n    if (tapHighlight === 'rgba(0, 0, 0, 0)') return true\n  }\n\n  return buttons\n    .concat(links)\n    .filter(filterActiveStyles)\n    .map((el) => ({\n      type: getNodeName(el),\n      text: el.innerText,\n      html: el.innerHTML,\n      path: getDomPath(el),\n    }))\n}\n\nconst maxWidth = 600\n\nexport const getSrcsetWarnings = (container) => {\n  const images = getElements(container, 'img')\n\n  const warnings = images\n    .filter((img) => {\n      const src = img.getAttribute('src')\n      const srcSet = img.getAttribute('srcset')\n      if (srcSet || !src) return false\n      const isSVG = Boolean(src.match(/svg$/))\n      if (isSVG) return false\n      const isLarge =\n        parseInt(getComputedStyle(img).width, 10) > maxWidth ||\n        img.naturalWidth > maxWidth\n      if (!isLarge) return false\n      return true\n    })\n    .map((img) => {\n      return {\n        src: img.src,\n        path: getDomPath(img),\n        alt: img.alt,\n      }\n    })\n  return warnings\n}\n\nexport const getBackgroundImageWarnings = (container) => {\n  const backgroundImageRegex = /url\\(\".*?(.png|.jpg|.jpeg)\"\\)/\n  const elsWithBackgroundImage = getElements(container, '#root *').filter(\n    (el) => {\n      const style = getComputedStyle(el)\n      if (\n        style['background-image'] &&\n        backgroundImageRegex.test(style['background-image']) &&\n        // HACK\n        // ideally, we would make a new image element and check its \"naturalWidth\"\n        // to get a better idea of the size of the background image, this is a hack\n        el.clientWidth > 200\n      ) {\n        return true\n      }\n    }\n  )\n\n  if (!elsWithBackgroundImage.length) return []\n\n  const styleDict = new Map()\n\n  const sheets = container.styleSheets\n  Object.keys(sheets).forEach((k) => {\n    getStylesheetRules(sheets, k).forEach((rule) => {\n      if (!rule) return\n      try {\n        elsWithBackgroundImage.forEach((el) => {\n          if (el.matches(rule.selectorText)) {\n            styleDict.set(el, (styleDict.get(el) || []).concat(rule))\n          }\n        })\n      } catch (e) {\n        // catch errors in safari\n      }\n    })\n  })\n\n  const responsiveBackgroundImgRegex = /-webkit-min-device-pixel-ratio|min-resolution|image-set/\n\n  const filteredEls = [...styleDict.entries()]\n    .map(([el, styles]) => {\n      if (!styles) return false\n      const requiresResponsiveWarning = styles.reduce((acc, curr) => {\n        if (acc === false) return acc\n        if (responsiveBackgroundImgRegex.test(curr)) return false\n        return true\n      }, true)\n      return requiresResponsiveWarning ? el : false\n    })\n    .filter(Boolean)\n    .map((el) => {\n      const bg = getComputedStyle(el).backgroundImage\n      const src = bg.match(/url\\(\"(.*)\"\\)/)\n        ? bg.match(/url\\(\"(.*)\"\\)/)[1]\n        : undefined\n      return {\n        path: getDomPath(el),\n        src,\n      }\n    })\n\n  return filteredEls\n}\n\nconst textInputs = [\n  'text',\n  'search',\n  'tel',\n  'url',\n  'email',\n  'number',\n  'password',\n]\n\nconst attachLabels = (inputs, container) => {\n  return inputs.map((input) => {\n    let labelText = ''\n    if (input.labels && input.labels[0]) {\n      labelText = input.labels[0].innerText\n    } else if (input.parentElement.nodeName === 'LABEL')\n      labelText = input.parentElement.innerText\n    else if (input.id) {\n      const label = container.querySelector(`label[for=\"${input.id}\"]`)\n      if (label) labelText = label.innerText\n    }\n    return {\n      path: getDomPath(input),\n      labelText,\n      type: input.type,\n    }\n  })\n}\n\nexport const getAutocompleteWarnings = (container) => {\n  const inputs = getElements(container, 'input')\n  const warnings = inputs.filter((input) => {\n    const currentType = input.getAttribute('type')\n    const autocomplete = input.getAttribute('autocomplete')\n    if (textInputs.find((type) => currentType === type) && !autocomplete) {\n      return true\n    }\n    return false\n  })\n  return attachLabels(warnings, container)\n}\n\nexport const getInputTypeNumberWarnings = (container) => {\n  const inputs = getElements(container, 'input[type=\"number\"]')\n  return attachLabels(inputs)\n}\n\nexport const getInputTypeWarnings = (container) => {\n  const inputs = getElements(container, 'input[type=\"text\"]')\n    .concat(getElements(container, 'input:not([type])'))\n    .filter((input) => !input.getAttribute('inputmode'))\n  return attachLabels(inputs, container)\n}\n\nconst isInside = (dangerZone, boundingBox) => {\n  return (\n    boundingBox.top <= dangerZone.bottom &&\n    boundingBox.bottom >= dangerZone.top &&\n    boundingBox.left <= dangerZone.right &&\n    boundingBox.right >= dangerZone.left\n  )\n}\nexport const getTouchTargetSizeWarning = ({\n  container,\n  minSize,\n  recommendedDistance,\n}) => {\n  const els = getElements(container, 'button')\n    .concat(getElements(container, '[role=\"button\"]'))\n    .concat(getElements(container, 'a'))\n    .map((el) => [el, el.getBoundingClientRect()])\n\n  const suspectEls = new Set([...els])\n\n  const elsWithClose = els\n    .map(([el1, bounding1]) => {\n      const dangerZone = {\n        top: bounding1.top - recommendedDistance,\n        left: bounding1.left - recommendedDistance,\n        right: bounding1.right + recommendedDistance,\n        bottom: bounding1.bottom + recommendedDistance,\n      }\n\n      const close = Array.from(suspectEls)\n        .filter(([el, boundingBox]) => {\n          if (el === el1) return false\n          if (isInside(dangerZone, boundingBox)) {\n            return el\n          }\n          return false\n        })\n\n      return { close: close ? close : null, el: el1, boundingBox: bounding1 }\n    })\n\n  const underMinSize = elsWithClose.filter(\n    ({ boundingBox: { width, height } }) => {\n      return width < minSize || height < minSize\n    }\n  )\n\n  const tooClose = elsWithClose.filter(({ close }) => {\n    return close && close.length\n  })\n\n  const present = ({ el, boundingBox: { width, height }, close }) => {\n    return {\n      type:\n        el.nodeName === 'A'\n          ? 'a'\n          : el.nodeName === 'BUTTON'\n          ? 'button'\n          : `${el.nodeName.toLowerCase()}[role=\"button\"]`,\n      path: getDomPath(el),\n      text: el.innerText,\n      html: el.innerHTML,\n      width: Math.floor(width),\n      height: Math.floor(height),\n      close,\n    }\n  }\n\n  return {\n    underMinSize: underMinSize.map(present),\n    tooClose: tooClose.map(present),\n  }\n}\n\nexport const getTooWideWarnings = (container) => {\n  const containerWidth = container.body.clientWidth\n  const allElements = getElements(container, '#root *')\n  return allElements\n    .filter((el) => {\n      return el.clientWidth > containerWidth\n    })\n    .map((el) => {\n      return {\n        el,\n        path: getDomPath(el),\n      }\n    })\n}\n\n\nexport const getActiveWarnings = (container) => {\n  const buttons = getElements(container, 'button').concat(\n    getElements(container, '[role=\"button\"]')\n  )\n  const links = getElements(container, 'a')\n\n  return buttons\n    .concat(links)\n    .map((el) => getActiveStyles(container, el) ?\n      {\n        type: getNodeName(el),\n        text: el.innerText,\n        html: el.innerHTML,\n        path: getDomPath(el),\n      }\n      : null\n    ).filter(Boolean)\n}\n\nexport const getOriginalStyles = (container, el) => {\n  const sheets = container.styleSheets\n  let result = []\n  Object.keys(sheets).forEach((k) => {\n    const rules = getStylesheetRules(sheets, k)\n    rules.forEach((rule) => {\n      if (rule) {\n        try {\n          if (el.matches(rule.selectorText)) {\n            result.push(rule.cssText)\n          }\n        } catch (e) {\n          // catch errors in safari\n        }\n      }\n    })\n  })\n  return result\n}\n\nfunction* vhIterator(container) {\n  const elements = getElements(container, '#root *')\n  const len = elements.length\n  const result = []\n\n  for (let i = 0; i < len; i++) {\n    const el = elements[i]\n    const styles = getOriginalStyles(container, el)\n    const vhWarning = styles.find((style) => /100vh/.test(style))\n    if (vhWarning) {\n      result.push( { el, css: vhWarning, path: getDomPath(el) })\n    }\n    yield\n  }\n  return result\n}\n\nexport const get100vhWarnings = (container) => {\n  const scheduler = createScheduler()\n  const task = scheduler.runTask(vhIterator(container))\n  return {abortTask: () => scheduler.abortTask(task), task}\n}\n\nexport const getFastWarnings = ({\n  container,\n  minSize,\n  recommendedSize,\n  recommendedDistance,\n}) => ({\n  tapHighlight: getTapHighlightWarnings(container),\n  autocomplete: getAutocompleteWarnings(container),\n  inputType: getInputTypeWarnings(container),\n  srcset: getSrcsetWarnings(container),\n  backgroundImg: getBackgroundImageWarnings(container),\n  inputTypeNumber: getInputTypeNumberWarnings(container),\n  touchTarget: getTouchTargetSizeWarning({\n    container,\n    minSize,\n    recommendedSize,\n    recommendedDistance,\n  }),\n  active: getActiveWarnings(container),\n  // tooWide: getTooWideWarnings(container),\n})\n","import React, { Fragment } from 'react'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { withTheme } from 'emotion-theming'\nimport { getFastWarnings, get100vhWarnings } from './utils'\n\nconst recommendedSize = 48\nconst minSize = 32\nconst recommendedDistance = 8\n\nconst accessibleBlue = '#0965df'\nconst warning = '#bd4700'\n\nconst tagStyles = `\n  padding: .25rem .5rem;\n  font-weight: bold;\n  display:inline-block;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n  svg {\n    margin-right: .25rem;\n    display: inline-block;\n    height: .7rem;\n    line-height: 1;\n    position: relative;\n    top: .03rem;\n    letter-spacing: .01rem;\n  }\n`\n\nconst StyledWarningTag = styled.div`\n  color: ${warning};\n  background-color: hsl(41, 100%, 92%);\n  ${tagStyles}\n`\n\nconst Warning = () => {\n  return (\n    <StyledWarningTag>\n      <svg\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 576 512\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"\n        ></path>\n      </svg>\n      warning\n    </StyledWarningTag>\n  )\n}\n\nconst StyledInfoTag = styled.div`\n  ${tagStyles}\n  color: ${accessibleBlue};\n  background-color: hsla(214, 92%, 45%, 0.1);\n`\nconst Hint = () => {\n  return (\n    <StyledInfoTag>\n      <svg\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        data-prefix=\"fas\"\n        data-icon=\"magic\"\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 512 512\"\n        className=\"svg-inline--fa fa-magic fa-w-16 fa-5x\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M224 96l16-32 32-16-32-16-16-32-16 32-32 16 32 16 16 32zM80 160l26.66-53.33L160 80l-53.34-26.67L80 0 53.34 53.33 0 80l53.34 26.67L80 160zm352 128l-26.66 53.33L352 368l53.34 26.67L432 448l26.66-53.33L512 368l-53.34-26.67L432 288zm70.62-193.77L417.77 9.38C411.53 3.12 403.34 0 395.15 0c-8.19 0-16.38 3.12-22.63 9.38L9.38 372.52c-12.5 12.5-12.5 32.76 0 45.25l84.85 84.85c6.25 6.25 14.44 9.37 22.62 9.37 8.19 0 16.38-3.12 22.63-9.37l363.14-363.15c12.5-12.48 12.5-32.75 0-45.24zM359.45 203.46l-50.91-50.91 86.6-86.6 50.91 50.91-86.6 86.6z\"\n          className=\"\"\n        ></path>\n      </svg>\n      hint\n    </StyledInfoTag>\n  )\n}\n\nconst Spacer = styled.div`\n  padding: 1rem;\n`\n\nconst StyledTappableContents = styled.div`\n  display: inline-block;\n  padding-top: 0.25rem;\n  height: 2rem;\n  min-width: 1rem;\n  width: auto;\n  background-color: hsla(0, 0%, 50%, 0.1);\n  border-radius: 3px;\n  li {\n    list-style-type: none;\n  }\n  img,\n  svg {\n    max-height: 2rem !important;\n    min-height: 1rem !important;\n    width: auto !important;\n  }\n`\n\nconst DemoImg = styled.img`\n  height: 4rem;\n  width: auto;\n  max-width: 100%;\n  background-color: hsla(0, 0%, 0%, 0.2);\n`\n\nconst ListEntry = styled.li`\n  margin-bottom: 0.5rem;\n  ${(props) => (props.nostyle ? 'list-style-type: none;' : '')};\n`\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));\n\n  font-size: ${(props) => props.theme.typography.size.s2}px;\n\n  p {\n    line-height: 1.4;\n  }\n\n  h3 {\n    font-size: ${(props) => props.theme.typography.size.s2}px;\n    font-weight: bold;\n    margin-bottom: 0.5rem;\n    margin-top: 0;\n  }\n\n  code {\n    background: hsla(0, 0%, 50%, 0.1);\n    border-radius: 3px;\n  }\n\n  summary {\n    cursor: pointer;\n    display: block;\n    margin-right: 1rem;\n    padding: 0.2rem 0.3rem;\n    border-radius: 5px;\n    color: ${accessibleBlue};\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 3px ${(props) => props.theme.color.mediumlight};\n    }\n  }\n\n  ul {\n    padding-left: 1.25rem;\n    max-height: 12rem;\n    overflow: auto;\n    padding-bottom: 0.5rem;\n    li {\n      margin-bottom: 0.3rem;\n    }\n  }\n  a {\n    text-decoration: none;\n    color: ${accessibleBlue};\n    &:hover {\n      border-bottom: 1px solid ${accessibleBlue};\n    }\n  }\n  > div {\n    border-bottom: 1px solid ${(props) => props.theme.color.medium};\n    border-right: 1px solid ${(props) => props.theme.color.medium};\n  }\n`\n\nconst StyledBanner = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 0.75rem;\n  grid-column: 1 / -1;\n  height: 2.875rem;\n`\n\nconst StyledRescanButton = styled.button`\n  margin-left: 1rem;\n  background: transparent;\n  border-width: 1px;\n  border-radius: 3px;\n  cursor: pointer;\n`\n\nconst fixText = 'Learn more'\n\nconst ActiveWarnings = ({ warnings }) => {\n  if (!warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n      <h3>\n        <code>:active</code> styles on iOS\n      </h3>\n      <p>\n        <code>:active</code> styles will only appear in iOS{' '}\n        <a href=\"https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari\">\n          if a touch listener is added to the element or one of its ancestors\n        </a>\n        . Once activated in this manner, <code>:active</code> styles (along with{' '}\n        <code>:hover</code> styles) will be applied immediately in iOS when a\n        user taps, possibly creating a confusing UX. (On Android,{' '}\n        <code>:active</code> styles are applied with a slight delay to allow the\n        user to use gestures like scroll without necessarily activating{' '}\n        <code>:active</code> styles.)\n      </p>\n      <ul>\n        {warnings.map((w, i) => {\n          return (\n            <ListEntry key={i}>\n              <code>{w.type}</code> with content{' '}\n              {w.text ? (\n                <b>{w.text}</b>\n              ) : w.html ? (\n                <StyledTappableContents\n                  dangerouslySetInnerHTML={{ __html: w.html }}\n                />\n              ) : (\n                '[no text found]'\n              )}\n            </ListEntry>\n          )\n        })}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p style={{ marginTop: '1rem' }}>\n          <a href=\"https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari/33681490#33681490\">\n            Relevant Stack Overflow thread\n          </a>\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst TapWarnings = ({ warnings }) => {\n  if (!warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n      <h3>Tap style removed from tappable element</h3>\n      <p>\n        These elements have an invisible{' '}\n        <code>-webkit-tap-highlight-color</code>. While this might be\n        intentional, please verify that they have appropriate tap indication\n        styles added through other means.\n      </p>\n      <ul>\n        {warnings.map((w, i) => {\n          return (\n            <ListEntry key={i}>\n              <code>{w.type}</code> with content{' '}\n              {w.text ? (\n                <b>{w.text}</b>\n              ) : w.html ? (\n                <StyledTappableContents\n                  dangerouslySetInnerHTML={{ __html: w.html }}\n                />\n              ) : (\n                '[no text found]'\n              )}\n            </ListEntry>\n          )\n        })}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p>\n          Some stylesheets remove the tap indication highlight shown on iOS and\n          Android browsers by adding the code{' '}\n          <code>-webkit-tap-highlight-color: transparent</code>. In order to\n          maintain a good mobile experience, tap styles should be added via\n          appropriate <code>:active</code> CSS styles (though, note that{' '}\n          <a href=\"https://stackoverflow.com/questions/3885018/active-pseudo-class-doesnt-work-in-mobile-safari\">\n            <code>:active</code> styles work inconsistently in iOS\n          </a>) , or via JavaScript on the <code>touchstart</code> event.\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst AutocompleteWarnings = ({ warnings }) => {\n  if (!warnings.length) return null\n  return (\n    <Spacer>\n      <Warning />\n      <h3>\n        Input with no <code>autocomplete</code> attribute\n      </h3>\n      <p>\n        Most textual inputs should have an explicit <code>autocomplete</code>{' '}\n        attribute.\n      </p>\n      <p>\n        If you truly want to disable autocomplete, try using a{' '}\n        <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=468153#c164\">\n          semantically valid but unique value rather than{' '}\n          <code>autocomplete=&quot;off&quot;</code>\n        </a>\n        , which doesn&apos;t work in Chrome.\n      </p>\n      <p>\n        Note: <code>autocomplete</code> is styled as <code>autoComplete</code>{' '}\n        in JSX.\n      </p>\n      <ul>\n        {warnings.map((w, i) => {\n          return (\n            <ListEntry key={i}>\n              <code>input type=&quot;{w.type}&quot;</code> and label{' '}\n              <b>{w.labelText || '[no label found]'}</b>\n            </ListEntry>\n          )\n        })}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li key=\"1\">\n            <a href=\"https://developers.google.com/web/updates/2015/06/checkout-faster-with-autofill\">\n              Autocomplete documentation by Google\n            </a>\n          </li>\n          <li key=\"2\">\n            <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\">\n              Autocomplete documentation by Mozilla\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst InputTypeWarnings = ({ warnings }) => {\n  if (!warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n\n      <h3>\n        Plain input type <code>text</code> detected\n      </h3>\n      <p>\n        This will render the default text keyboard on mobile (which could very\n        well be what you want!) If you haven&apos;t already, take a moment to\n        make sure this is correct. You can use{' '}\n        <a href=\"https://better-mobile-inputs.netlify.com/\">this tool</a> to\n        explore keyboard options.\n      </p>\n      <ul>\n        {warnings.map((w, i) => {\n          return (\n            <ListEntry key={i}>\n              <code>input type=&quot;{w.type}&quot;</code> and label{' '}\n              <b>{w.labelText || '[no label found]'}</b>\n            </ListEntry>\n          )\n        })}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p>\n          <a href=\"https://css-tricks.com/better-form-inputs-for-better-mobile-user-experiences/\">\n            Article reviewing the importance of using correct input types on the\n            mobile web from CSS Tricks.\n          </a>\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\nconst InputTypeNumberWarnings = ({ warnings }) => {\n  if (!warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n\n      <h3>\n        Input type <code>number</code> detected\n      </h3>\n      <p>\n        <code>\n          &lt;input type=&quot;text&quot; inputmode=&quot;decimal&quot;/&gt;\n        </code>{' '}\n        could give you improved usability over{' '}\n        <code>&lt;input type=&quot;number&quot; /&gt;</code>.\n      </p>\n      <p>\n        Note: <code>inputmode</code> is styled as <code>inputMode</code> in JSX.{' '}\n      </p>\n      <ul>\n        {warnings.map((w, i) => {\n          return (\n            <ListEntry key={i}>\n              <code>input type=&quot;{w.type}&quot;</code> and label{' '}\n              <b>{w.labelText || '[no label found]'}</b>\n            </ListEntry>\n          )\n        })}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <p>\n          <a href=\"https://technology.blog.gov.uk/2020/02/24/why-the-gov-uk-design-system-team-changed-the-input-type-for-numbers/\">\n            Overview of the issues with{' '}\n            <code>input type=&quot;number&quot;</code> from gov.uk.\n          </a>\n        </p>\n      </details>\n    </Spacer>\n  )\n}\n\n// const TooWideWarnings = ({ warnings }) => {\n//   if (!warnings.length) return null\n\n//   const title = `Element${\n//     warnings.length > 1 ? 's' : ''\n//   } introducing horizontal overflow`\n\n//   return (\n//     <Spacer>\n//       <Hint />\n//       <h3>{title}</h3>\n//       <p>\n//         The following element{warnings.length > 1 ? 's' : ''} had a width that\n//         exceeded that of the page, possibly introducing a horizontal scroll.\n//         While this may be intentional, please verify that this is not an error.\n//       </p>\n//       <LogToConsole title={title} els={warnings.map((w) => w.el)} />\n//       <div>\n//         {warnings.map(({ path }, i) => {\n//           return (\n//             <ListEntry key={i} style={{ marginBottom: '1rem' }} as=\"div\">\n//               <code>{path}</code>\n//             </ListEntry>\n//           )\n//         })}\n//       </div>\n//     </Spacer>\n//   )\n// }\n\nconst HeightWarnings = ({ warnings }) => {\n  if (!warnings.length) return null\n  return (\n    <Spacer>\n      <Hint />\n      <h3>\n        Usage of <code>100vh</code> CSS\n      </h3>\n      <p>\n        Viewport units are{' '}\n        <a href=\"https://chanind.github.io/javascript/2019/09/28/avoid-100vh-on-mobile-web.html\">\n          tricky on mobile.\n        </a>{' '}\n        On some mobile browers, depending on scroll position, <code>100vh</code>{' '}\n        might take up more than 100% of screen height due to browser chrome like\n        the address bar.\n      </p>\n      <ul>\n        {warnings.map(({ path }, i) => {\n          return (\n            <ListEntry key={i}>\n              <code>{path}</code>\n            </ListEntry>\n          )\n        })}\n      </ul>\n    </Spacer>\n  )\n}\n\nconst BackgroundImageWarnings = ({ warnings }) => {\n  if (!warnings.length) return null\n  return (\n    <Spacer>\n      <Warning />\n      <h3>Non-dynamic background image</h3>\n      <p>\n        Downloading larger-than-necessary images hurts performance for users on\n        mobile. You can use{' '}\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/image-set\">\n          <code>image-set</code>\n        </a>{' '}\n        to serve an appropriate background image based on the user&apos;s device\n        resolution.\n      </p>\n      <ul>\n        {warnings.map(({ src, alt }, i) => {\n          return (\n            <ListEntry key={i} nostyle>\n              <div>\n                <DemoImg src={src} alt={alt} />\n              </div>\n            </ListEntry>\n          )\n        })}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li key=\"1\">\n            <a href=\"https://css-tricks.com/responsive-images-css/\">\n              Article discussing responsive background images in greater detail,\n              including the interaction of <code>image-set</code> with media\n              queries, from CSS Tricks.\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst SrcsetWarnings = ({ warnings }) => {\n  if (!warnings.length) return null\n  return (\n    <Spacer>\n      <Warning />\n      <h3>\n        Large image without <code>srcset</code>\n      </h3>\n      <p>\n        Downloading larger-than-necessary images hurts performance for users on\n        mobile. You can use <code>srcset</code> to customize image sizes for\n        different device resolutions and sizes.\n      </p>\n      <ul>\n        {warnings.map(({ src, alt }, i) => {\n          return (\n            <ListEntry key={i} nostyle>\n              <div>\n                <DemoImg src={src} alt={alt} />\n              </div>\n            </ListEntry>\n          )\n        })}\n      </ul>\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li key=\"1\">\n            <a href=\"https://cloudfour.com/thinks/responsive-images-the-simple-way\">\n              Summary of the why and how of responsive images\n            </a>\n          </li>\n          <li key=\"2\">\n            <a href=\"https://www.responsivebreakpoints.com/\">\n              A tool to generate responsive images\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst TouchTargetWarnings = ({ warnings: { underMinSize, tooClose } }) => {\n  if (!underMinSize.length && !tooClose.length) return null\n  return (\n    <Spacer>\n      <Warning />\n\n      {Boolean(underMinSize.length) && (\n        <div>\n          <h3>Small touch target</h3>\n          <p>\n            With heights and/or widths of less than {minSize}px, these tappable\n            elements could be difficult for users to press:\n          </p>\n          <ul>\n            {underMinSize.map((w, i) => {\n              return (\n                <ListEntry key={i}>\n                  <code>{w.type}</code> with content{' '}\n                  {w.text ? (\n                    <b>{w.text}</b>\n                  ) : w.html ? (\n                    <StyledTappableContents\n                      dangerouslySetInnerHTML={{ __html: w.html }}\n                    />\n                  ) : (\n                    '[no text found]'\n                  )}\n                </ListEntry>\n              )\n            })}\n          </ul>\n        </div>\n      )}\n      {Boolean(tooClose.length) && (\n        <div>\n          <h3\n            style={{\n              marginTop: underMinSize.length ? '.5rem' : '0',\n            }}\n          >\n            Touch targets close together{' '}\n          </h3>\n          <p>\n            These tappable elements are less than {recommendedDistance}px from at least one other\n            tappable element:\n          </p>\n          <ul>\n            {tooClose.map((w, i) => {\n              return (\n                <ListEntry key={i}>\n                  <code>{w.type}</code> with content{' '}\n                  {w.text ? (\n                    <b>{w.text}</b>\n                  ) : w.html ? (\n                    <StyledTappableContents\n                      dangerouslySetInnerHTML={{ __html: w.html }}\n                    />\n                  ) : (\n                    '[no text found]'\n                  )}\n                </ListEntry>\n              )\n            })}\n          </ul>\n        </div>\n      )}\n      <details>\n        <summary>{fixText}</summary>\n        <ul>\n          <li key=\"1\">\n            <a href=\"https://www.nngroup.com/articles/touch-target-size/\">\n              Touch target size article from the Nielsen Norman Group\n            </a>\n          </li>\n          <li key=\"2\">\n            <a href=\"https://web.dev/accessible-tap-targets/\">\n              Tap target size recommendations from Google\n            </a>\n          </li>\n        </ul>\n      </details>\n    </Spacer>\n  )\n}\n\nconst convertToBool = (num) => (num > 0 ? 1 : 0)\n\nconst Wrapper = ({ theme, children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>{children}</Container>\n    </ThemeProvider>\n  )\n}\n\nexport const Loading = withTheme(({theme}) => (\n  <Wrapper theme={theme}>\n    <StyledBanner>Running scan...</StyledBanner>\n  </Wrapper>\n))\n\nconst Hints = ({ container, theme }) => {\n  const [warnings, setWarnings] = React.useState(undefined)\n  const [rescan, setRescan] = React.useState(0)\n\n  React.useEffect(() => {\n    setWarnings(getFastWarnings({\n      container,\n      minSize,\n      recommendedDistance,\n      recommendedSize\n    }))\n    const {abortTask, task} = get100vhWarnings(container)\n    task.then((height) => {\n      setWarnings(prev => ({...prev, height}))\n    })\n    return abortTask\n  }, [container, rescan])\n\n  const warningCount = React.useMemo(() => warnings ? Object.keys(warnings)\n      .reduce((acc, key) => {\n        const curr = warnings[key]\n        const count = Array.isArray(curr)\n          ? convertToBool(curr.length)\n          : //touchTarget returns an object not an array\n          Object.keys(curr)\n            .map((key) => curr[key])\n            .reduce((acc, curr) => {\n              return acc + convertToBool(curr.length)\n            }, 0)\n        return acc + count\n      }, 0) : 0\n  , [warnings])\n\n  React.useEffect(() => {\n    const tab = Array.from(\n      document.querySelectorAll('button[role=\"tab\"]')\n    ).find((el) => /^Mobile(\\s\\(\\d+\\))?$/.test(el.innerText))\n    if (tab) {\n      if (warningCount === 0) {\n        tab.innerText = 'Mobile'\n      } else {\n        tab.innerText = `Mobile (${warningCount})`\n      }\n    }\n    return () => tab.innerText = 'Mobile'\n  }, [warningCount])\n\n  // Before counting, show the Loading state\n  if (!warnings) {\n    return <Loading />\n  }\n\n  const scanComplete = !!warnings.height;\n\n  const onRescanClick = () => setRescan(prev => prev + 1);\n\n  if (warningCount === 0 && scanComplete) {\n    return (\n      <Wrapper theme={theme}>\n        <StyledBanner>\n          <span>Looking good! No mobile hints available.</span>\n          <StyledRescanButton onClick={onRescanClick} type=\"button\">\n            Rescan\n          </StyledRescanButton>\n        </StyledBanner>\n      </Wrapper>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <StyledBanner>\n          {scanComplete ? (\n            <Fragment>\n              <span>\n                Scan complete!\n              </span>\n              <StyledRescanButton onClick={onRescanClick} type=\"button\">\n                Rescan\n              </StyledRescanButton>\n            </Fragment>\n          ) : (\n            <span>\n              Preliminary results shown, still scanning...\n            </span>\n          )}\n        </StyledBanner>\n        <TouchTargetWarnings warnings={warnings.touchTarget} />\n        <AutocompleteWarnings warnings={warnings.autocomplete} />\n        {/* <TooWideWarnings warnings={warnings.tooWide} container={container} /> */}\n        <InputTypeWarnings warnings={warnings.inputType} />\n        <InputTypeNumberWarnings warnings={warnings.inputTypeNumber} />\n        {warnings.height && <HeightWarnings warnings={warnings.height} />}\n        <TapWarnings warnings={warnings.tapHighlight} />\n        <ActiveWarnings warnings={warnings.active} />\n        <SrcsetWarnings warnings={warnings.srcset} />\n        <BackgroundImageWarnings warnings={warnings.backgroundImg} />\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nexport default withTheme(Hints)\n","import React from 'react'\nimport { addons, types } from '@storybook/addons'\nimport { STORY_RENDERED } from '@storybook/core-events'\nimport { useChannel, useAddonState } from '@storybook/api'\nimport { AddonPanel } from '@storybook/components'\nimport Hints, { Loading } from './Hints'\n\nconst ADDON_ID = 'mobile-hints'\nconst PARAM_KEY = 'mobile-hints'\nconst PANEL_ID = `${ADDON_ID}/panel`\n\nconst viewportId = 'storybook/viewport'\nconst noViewport = 'reset'\nconst defaultViewport = 'mobile1'\n\nconst ViewportManager = ({ active }) => {\n  const [viewportState, setViewportState] = useAddonState(viewportId)\n  const cachedState = React.useRef(null)\n  React.useEffect(() => {\n    if (cachedState.current && !active) {\n      setViewportState({\n        selected: cachedState.current,\n      })\n      cachedState.current = null\n    } else {\n      if (active && (!viewportState || viewportState.selected === noViewport)) {\n        cachedState.current = noViewport\n        setViewportState({\n          selected: defaultViewport,\n        })\n      }\n    }\n  }, [active]) // eslint-disable-line\n\n  return null\n}\n\nconst StateWrapper = ({ children }) => {\n  const [storyId, setStoryId] = React.useState('')\n\n  useChannel({\n    [STORY_RENDERED]: (...args) => {\n      setStoryId(args)\n    }\n  })\n  return React.cloneElement(children, {\n    storyId,\n  })\n}\n\nconst getContainer = () => {\n  const iframe = document.getElementById('storybook-preview-iframe')\n  if (!iframe) return null\n  return iframe.contentDocument\n}\n\nconst delay = 2000\nconst MyPanel = ({ storyId }) => {\n  const [html, setHTML] = React.useState(undefined)\n\n  React.useEffect(() => {\n    // clear HTML when storyId changes\n    setHTML(undefined)\n    // check for container\n    let timeoutId = undefined\n    const checkContainer = () => {\n      const container = getContainer()\n      if (!container || !container.body) {\n        clearTimeout(timeoutId)\n        timeoutId = setTimeout(checkContainer, delay)\n      } else {\n        setHTML(container.body.innerHTML)\n      }\n    }\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(checkContainer, delay)\n    return () => clearTimeout(timeoutId)\n  }, [storyId])\n\n  const container = getContainer()\n\n  if (!html || !container) {\n    return <Loading />\n  }\n\n  return <Hints container={container} />\n}\n\naddons.register(ADDON_ID, () => {\n  const render = ({ active, key }) => {\n    return (\n      <React.Fragment key=\"storybook-mobile\">\n        <ViewportManager active={active} />\n        <AddonPanel active={active} key={key}>\n          <StateWrapper active={active}>\n            <MyPanel key={key} active={active} />\n          </StateWrapper>\n        </AddonPanel>\n      </React.Fragment>\n    )\n  }\n  const title = 'Mobile'\n\n  addons.add(PANEL_ID, {\n    type: types.PANEL,\n    title,\n    render,\n    paramKey: PARAM_KEY,\n  })\n})\n"],"names":["getDomPath","el","stack","parentNode","sibCount","sibIndex","i","childNodes","length","sib","nodeName","hasAttribute","id","unshift","toLowerCase","classList","toString","tagName","toFilter","filter","includes","join","getElements","container","tag","Array","from","querySelectorAll","getStylesheetRules","sheets","k","rules","cssRules","e","getNodeName","getTapHighlightWarnings","buttons","concat","links","getComputedStyle","map","type","text","innerText","html","innerHTML","path","getSrcsetWarnings","img","src","getAttribute","Boolean","match","parseInt","width","naturalWidth","alt","getBackgroundImageWarnings","backgroundImageRegex","elsWithBackgroundImage","style","test","clientWidth","styleDict","Map","styleSheets","Object","keys","forEach","rule","matches","selectorText","set","get","responsiveBackgroundImgRegex","entries","styles","reduce","acc","curr","bg","backgroundImage","undefined","textInputs","attachLabels","inputs","input","labelText","labels","parentElement","label","querySelector","getAutocompleteWarnings","warnings","currentType","autocomplete","find","getInputTypeNumberWarnings","getInputTypeWarnings","getTouchTargetSizeWarning","minSize","recommendedDistance","els","getBoundingClientRect","suspectEls","Set","elsWithClose","el1","bounding1","dangerZone","top","left","right","bottom","close","boundingBox","isInside","underMinSize","height","tooClose","present","Math","floor","getActiveWarnings","result","activeRegex","ruleNoPseudoClass","replace","push","getActiveStyles","getOriginalStyles","cssText","tagStyles","StyledWarningTag","styled","div","Warning","React","aria-hidden","focusable","role","xmlns","viewBox","fill","d","StyledInfoTag","Hint","data-prefix","data-icon","className","Spacer","StyledTappableContents","DemoImg","ListEntry","li","props","nostyle","Container","theme","typography","size","s2","color","mediumlight","medium","StyledBanner","StyledRescanButton","button","fixText","ActiveWarnings","href","w","key","dangerouslySetInnerHTML","__html","marginTop","TapWarnings","AutocompleteWarnings","InputTypeWarnings","InputTypeNumberWarnings","HeightWarnings","BackgroundImageWarnings","SrcsetWarnings","TouchTargetWarnings","convertToBool","num","Wrapper","children","ThemeProvider","Loading","withTheme","setWarnings","useState","rescan","setRescan","useEffect","recommendedSize","tapHighlight","inputType","srcset","backgroundImg","inputTypeNumber","touchTarget","active","getFastWarnings","abortTask","task","scheduler","createScheduler","runTask","elements","len","vhWarning","css","vhIterator","get100vhWarnings","then","prev","warningCount","useMemo","isArray","tab","document","scanComplete","onRescanClick","onClick","Fragment","ViewportManager","viewportState","setViewportState","useAddonState","cachedState","useRef","current","selected","StateWrapper","storyId","setStoryId","useChannel","[object Object]","STORY_RENDERED","args","cloneElement","getContainer","iframe","getElementById","contentDocument","MyPanel","setHTML","timeoutId","checkContainer","body","clearTimeout","setTimeout","Hints","addons","register","add","types","PANEL","title","render","AddonPanel","paramKey"],"mappings":"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"}